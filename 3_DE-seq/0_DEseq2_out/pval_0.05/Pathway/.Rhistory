slt_df9 <- subset(in_df, (in_df$t1 < 30)&(in_df$t1 > 15)&(in_df$t2<25))
g9_list <- unlist(slt_df9$gene_name)
#cbs_plot(in_file, g9_list, "g9")
###----- Group10
slt_df10 <- subset(in_df, (in_df$t1 < 50)&(in_df$t1 > 0)&(in_df$t2<50)&(in_df$t2>25))
g10_list <- unlist(slt_df10$gene_name)
#cbs_plot(in_file, g10_list, "g10")
group_lists <- list(g1_list, g2_list, g3_list, g4_list, g5_list,
g6_list, g7_list, g8_list, g9_list, g10_list)
genes.i <- all_df$gene_name
group_lists <- list(g1_list, g2_list, g3_list, g4_list, g5_list,
g6_list, g7_list, g8_list, g9_list, g10_list)
genes.i <- group_lists[1]
genes.i
genes.i <- as.character(unlist(group_lists[1]))
genes.i
egoBP <- enrichGO(gene = genes.i, keyType = 'SYMBOL', OrgDb = org.Mm.eg.db, ont = "BP", pAdjustMethod = "BH", qvalueCutoff = 0.05, readable = TRUE)
select(org.Mm.eg.db, genes.i, c("ENTREZID","GENENAME"), "ALIAS")
select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
genes.i.id
genes.i.id$ENTREZID
egoBP <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "BP", pAdjustMethod = "BH", qvalueCutoff = 0.05, readable = TRUE)
egoBP
for (i in c(1:length(group_lists))) {
setwd("/Volumes/Yolanda/CRF_Screen/InVitro/2_0_t-test_by_gene/compiled_Amt")
genes.i <- as.character(unlist(group_lists[i]))
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
genes.i.id$ENTREZID
egoBP <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "BP", pAdjustMethod = "BH", qvalueCutoff = 0.05, readable = TRUE)
egoCC <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "CC", pAdjustMethod = "BH", qvalueCutoff = 0.05, readable = TRUE)
egoMF <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "MF", pAdjustMethod = "BH", qvalueCutoff = 0.05, readable = TRUE)
# Dotplot visualization
if (!is.null(egoBP)){
egoBP.dotplot <- dotplot(egoBP, showCategory=25)
ggsave(paste(i,"_BP_dotplot.pdf",sep=""), egoBP.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
}
if(!is.null(egoCC)){
egoCC.dotplot <- dotplot(egoCC, showCategory=25)
ggsave(paste(i,"_CC_dotplot.pdf",sep=""), egoCC.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
}
if(!is.null(egoMF)){
egoMF.dotplot <- dotplot(egoMF, showCategory=25)
ggsave(paste(i,"_MF_dotplot.pdf",sep=""), egoMF.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
}
}
source('/Volumes/Yolanda/CRF_Screen/0_Codes/3_tsne_cbs-plot_byGene.R')
source('/Volumes/Yolanda/CRF_Screen/0_Codes/3_tsne_cbs-plot_byGene.R')
install.packages('Seurat')
library(Seurat)
library(dplyr)
########## Seurat for ScRNAseq ##########
# Author: Huitian (Yolanda) Diao
# Apr 314th, 2019
# CD25KO ScRNAseq analysis
########## Libraries ##########
library(dplyr)
library(Seurat)
sc.data <- Read10X(data.dir = "/Volumes/HD_EXP334/Exp334CD25KOSc/n10000_outs/filtered_feature_bc_matrix")
sc.data <- Read10X(data.dir = "/Volumes/HD_EXP334/Exp334CD25KOSc/n10000_outs/filtered_feature_bc_matrix")
# Save features.tsv to genes.tsv
sc.data <- Read10X(data.dir = "/Volumes/HD_EXP334/Exp334CD25KOSc/n10000_outs/filtered_feature_bc_matrix")
# Initialize the Seurat object with the raw (non-normalized data)
sc <- CreateSeuratObject(counts = sc.data, project = "Exp334CD25KO", min.cells = 3, min.features = 200)
sc <- CreateSeuratObject(counts = sc.data, project = "Exp334CD25KO", min.cells = 3, min.features = 200)
sc <- CreateSeuratObject(sc.data, project = "Exp334CD25KO", min.cells = 3, min.features = 200)
# The [[ operator can add columns to object metadata. This is a great place to stash QC stats
pbmc[["percent.mt"]] <- PercentageFeatureSet(object = pbmc, pattern = "^MT-")
# The [[ operator can add columns to object metadata. This is a great place to stash QC stats
pbmc[["percent.mt"]] <- PercentageFeatureSet(object = sc, pattern = "^MT-")
# Visualize QC metrics as a violin plot
VlnPlot(object = pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
# Visualize QC metrics as a violin plot
VlnPlot(object = pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"))
VlnPlot(object = sc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"))
str(sc)
VlnPlot(object = sc, features = c( "nCount_RNA", "percent.mt"))
sc <- NormalizeData(sc, normalization.method = "LogNormalize", scale.factor = 10000)
head(sc.data)
tail(sc.data)
str(sc.data)
sc.data[c("CD25KO_TotalA","CD25WT_TotalA","EndoNAV_TotalA","P14NAV_TotalA"), 1:30]
head(sc.data)
str(sc.data)
sc.data$i
sc.data@i
sc.data@Dim
sc.data@Dimnames
str(sc.data)
str(sc.data@Dimnames)
sc.data@Dimnames[0]
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
library(magrittr)
BiocManager::install("MEDIPS", version = "3.8")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
library(ggplot2)
library(dplyr)
libray(magrittr)
library(magrittr)
library(ggrepel)
tsne.real = read.csv("https://docs.google.com/uc?id=1KArwfOd5smzuCsrpgW9Xpf9I06VOW4ga&export=download")
info.real = tsne.real
ggplot(tsne.real, aes(x = tsne1, y = tsne2)) + geom_point(alpha = 0.1) +
theme_bw()
k = 100
knn.real = get.knn(as.matrix(tsne.real), k = k)
knn.real = data.frame(from = rep(1:nrow(knn.real$nn.index),
k), to = as.vector(knn.real$nn.index), weight = 1/(1 + as.vector(knn.real$nn.dist)))
nw.real = graph_from_data_frame(knn.real, directed = FALSE)
nw.real = simplify(nw.real)
lc.real = cluster_louvain(nw.real, gamma = 0.1)
info.real$louvain = as.factor(membership(lc.real))
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
ggplot(info.real, aes(x = tsne1, y = tsne2, colour = louvain)) +
geom_point(alpha = 0.3) + theme_bw() + geom_label_repel(aes(label = louvain),
data = lc.cent) + guides(colour = FALSE)
k = 100
knn.real = get.knn(as.matrix(tsne.real), k = k)
library(igraph)
library(FNN)
install.packages("FNN")
library(FNN)
k = 100
knn.real = get.knn(as.matrix(tsne.real), k = k)
knn.real = data.frame(from = rep(1:nrow(knn.real$nn.index),
k), to = as.vector(knn.real$nn.index), weight = 1/(1 + as.vector(knn.real$nn.dist)))
nw.real = graph_from_data_frame(knn.real, directed = FALSE)
nw.real = simplify(nw.real)
lc.real = cluster_louvain(nw.real, gamma = 0.1)
info.real$louvain = as.factor(membership(lc.real))
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
ggplot(info.real, aes(x = tsne1, y = tsne2, colour = louvain)) +
geom_point(alpha = 0.3) + theme_bw() + geom_label_repel(aes(label = louvain),
data = lc.cent) + guides(colour = FALSE)
library(igraph)
lc.real = cluster_louvain(nw.real, gamma = 0.1)
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
info.real$louvain = as.factor(membership(lc.real))
lc.real = cluster_louvain(nw.real, gamma = 0.1)
lc.real = cluster_louvain(nw.real) #, gamma = 0.1
info.real$louvain = as.factor(membership(lc.real))
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
lc.real = cluster_louvain(nw.real) #, gamma = 0.1
info.real$louvain = as.factor(membership(lc.real))
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
ggplot(info.real, aes(x = tsne1, y = tsne2, colour = louvain)) +
geom_point(alpha = 0.3) + theme_bw() + geom_label_repel(aes(label = louvain),
data = lc.cent) + guides(colour = FALSE)
browseVignettes("DESeq2")
packageVersion("DESeq2")
DESmat<-DESeqDataSetFromMatrix(countData = DeseqData, colData = DeseqDesign,design = ~ condition)
#---- Read input file
DeseqData <- read.csv(count.file,header=TRUE, row.names=1)
#---- Meta data
DeseqDesign <- data.frame(row.names=rownames,condition=as.factor(conds))
#---- Generate DEseq matrix
DESmat <- DESeqDataSetFromMatrix(countData = DeseqData, colData = DeseqDesign,design = ~ condition)
install.packages("gridExtra")
install.packages("gridExtra")
install.packages("gridExtra")
install.packages("yaml")
########## Imports ##########
library(DEseq2)
library(DEseq2)
BiocManager::install("DESeq2")
install.packages("RcppArmadillo")
library(DEseq2)
library(DEseq2)
install.packages("Rcpp","RcppArmadillo","inline","rbenchmark")
install.packages("Rcpp", "RcppArmadillo", "inline", "rbenchmark")
install.packages("Rcpp", "RcppArmadillo", "inline", "rbenchmark")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
########## DEseq2 for Nascent RNA-seq count table ##########
# Author: Huitian (Yolanda) Diao
# April 30th, 2019
# Dependencies:
# -| Compiled count table <- 2_1_collect_count_files.py
# --| HT-seq count file <- HT-seq count <- 2_0_ht-seq_count.dupr.sh
# ---| Strand seperated bam file <- 1_3_splitStrands_bamTobdg_add-chr_bdgTobw_new.sh
# ---| Exon reference GFF3 file
# ----| Biomart: http://useast.ensembl.org/biomart/martview/a4b3d3135f51db16df0294bef537f063
# ----| BioMart-out-csv_To_Gff.sh  &  Gff_rmdup.py
######################################## Imports ########################################
library(DESeq2)
###--- Config
wk.dir <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/3_DE-seq"
op.dir <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/3_DE-seq"
setwd(wk.dir)
######################################## Main ########################################
count.file <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/2_Compiled_csv/Exp337_dupr_all_count_c5.csv"
row.names <- c("KO_0h_rep1_dupr", "KO_0h_rep2_dupr", "KO_0h_rep3_dupr", "KO_24h_rep1_dupr",
"KO_24h_rep2_dupr", "KO_24h_rep3_dupr", "KO_48h_rep1_dupr", "KO_48h_rep2_dupr",
"KO_48h_rep3_dupr", "KO_6h_rep1_dupr", "KO_6h_rep2_dupr", "WT_0h_rep1_dupr",
"WT_0h_rep2_dupr", "WT_0h_rep3_dupr", "WT_24h_rep1_dupr", "WT_24h_rep2_dupr",
"WT_24h_rep3_dupr", "WT_48h_rep1_dupr", "WT_48h_rep2_dupr", "WT_48h_rep3_dupr",
"WT_6h_rep1_dupr", "WT_6h_rep2_dupr", "WT_6h_rep3_dupr")
conds <- c("KO_0h", "KO_0h", "KO_0h", "KO_24h", "KO_24h", "KO_24h", "KO_48h", "KO_48h", "KO_48h", "KO_6h", "KO_6h",
"WT_0h", "WT_0h", "WT_0h", "WT_24h", "WT_24h", "WT_24h", "WT_48h", "WT_48h", "WT_48h", "WT_6h", "WT_6h", "WT_6h")
library(ggplot2)
library(ggrepel)
library("clusterProfiler")
BiocManager::install("org.Mm.eg.db")
library("org.Mm.eg.db")
in.dir <- "/Volumes/EXP337/Exp337CD25KONascent/3_DE-seq/0_DEseq2_out/pval_0.05/geneName"
wk.dir <- "/Volumes/EXP337/Exp337CD25KONascent/3_DE-seq/0_DEseq2_out/pval_0.05/Pathway"
in.file.vec <- list.files(path=in.dir, pattern="*.csv")
i <- in.file.vec[1]
setwd(wk.dir)
in.df <- read.csv(paste(in.dir, i, sep="/"))
genes.i <- as.character(unlist(in.df$gene_name))
genes.i <- unique(genes.i)
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
#genes.i.id$ENTREZID
egoBP <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "BP", pAdjustMethod = "BH", qvalueCutoff = 0.05, readable = TRUE)
egoBP
str(egoBP)
egoBP@result
str(egoBP@result)
source('/Volumes/EXP337/Exp337CD25KONascent/codes_locol/2_5_Pathway.R')
for (i in in.file.vec) {
#i <- in.file.vec[1]
print(paste("Start analysis of:", i, sep=" "))
setwd(wk.dir)
in.df <- read.csv(paste(in.dir, i, sep="/"))
genes.i <- as.character(unlist(in.df$gene_name))
genes.i <- unique(genes.i)
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
#genes.i.id$ENTREZID
egoBP <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "BP", pAdjustMethod = "BH", pvalueCutoff = 0.05, readable = TRUE)
egoCC <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "CC", pAdjustMethod = "BH", pvalueCutoff = 0.05, readable = TRUE)
egoMF <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "MF", pAdjustMethod = "BH", pvalueCutoff = 0.05, readable = TRUE)
# Dotplot visualization
if (!is.null(egoBP)){
pdf.name <- paste(i,"_BP_dotplot.pdf",sep="")
csv.name <- paste(i,"_BP_dotplot.csv",sep="")
egoBP.dotplot <- dotplot(egoBP, showCategory=25)
ggsave(pdf.name, egoBP.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
write.csv(egoBP@result, file=csv.name, row.names=FALSE)
}
if(!is.null(egoCC)){
pdf.name <- paste(i,"_CC_dotplot.pdf",sep="")
csv.name <- paste(i,"_CC_dotplot.csv",sep="")
egoCC.dotplot <- dotplot(egoCC, showCategory=25)
ggsave(pdf.name, egoCC.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
write.csv(egoCC@result, file=csv.name, row.names=FALSE)
}
if(!is.null(egoMF)){
pdf.name <- paste(i,"_MF_dotplot.pdf",sep="")
csv.name <- paste(i,"_MF_dotplot.csv",sep="")
egoMF.dotplot <- dotplot(egoMF, showCategory=25)
ggsave(paste(i,"_MF_dotplot.pdf",sep=""), egoMF.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
write.csv(egoMF@result, file=csv.name, row.names=FALSE)
}
}
egoBP
egoBP.dotplot
egoBP.dotplot <- dotplot(egoBP, x="count", showCategory=25)
egoBP
egoBP.dotplot
write.csv(egoBP@result, file=csv.name, row.names=FALSE)
csv.name <- paste(i,"_BP_dotplot.csv",sep="")
write.csv(egoBP@result, file=csv.name, row.names=FALSE)
egoBP.dotplot <- dotplot(egoBP, x="count", showCategory=25, includeAll = TRUE)
egoBP.dotplot
egoBP.dotplot <- dotplot(egoBP@result, x="count", showCategory=25)
egoBP.dotplot
egoBP
egoBP <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "BP", pAdjustMethod = "none", pvalueCutoff = 0.05, readable = TRUE)
pdf.name <- paste(i,"_BP_dotplot.pdf",sep="")
csv.name <- paste(i,"_BP_dotplot.csv",sep="")
write.csv(egoBP@result, file=csv.name, row.names=FALSE)
egoBP.dotplot <- dotplot(egoBP@result, x="count", showCategory=25)
egoBP
egoBP.dotplot
write.csv(egoBP@result, file=csv.name, row.names=FALSE)
egoBP.dotplot <- dotplot(egoBP, x="count", showCategory=25)
egoBP.dotplot
source('/Volumes/EXP337/Exp337CD25KONascent/codes_locol/2_5_Pathway.R')
source('/Volumes/EXP337/Exp337CD25KONascent/codes_locol/2_5_Pathway.R')
########## Tsne cluster extraction ##########
# Author: Huitian (Yolanda) Diao
# April 22nd, 2019
# Reference: https://jmonlong.github.io/Hippocamplus/2018/02/13/tsne-and-clustering/
########## Imports ##########
library(igraph)
library(FNN)
library(ggplot2)
library(ggrepel)
library(dplyr)
library(magrittr)
wk.dir <- "/Volumes/Yolanda/RNAseq_Compilation/CRM_analysis_2/1_GeneCluster/Cluster_extraction"
setwd(wk.dir)
###----- Read data
tsne.file <- "/Volumes/Yolanda/RNAseq_Compilation/CRM_analysis_2/1_GeneCluster/exp36-174-mem-exh_flt_avg-log10tpm_log2fc_CRF_tsne.csv"
tsne.all <- read.csv(tsne.file)
tail(colnames(info.real), -3)
tsne.real <- subset(tsne.all, select=c("t1", "t2"))
info.real <- tsne.all
tail(colnames(info.real), -3)
# Check tsne
ggplot(tsne.real, aes(x = t1, y = t2)) + geom_point(alpha = 0.1) + theme_bw()
# Baf complex
baf.mem <- c("Actb", "Actl6a", "Actl6b", "Arid1a", "Arid1b",
"Bcl7a", "Bcl7b", "Bcl7c", "Bcl11a", "Bcl11b",
"Brd9", "Dpf1", "Dpf2", "Dpf3", "Phf10", "Smarca2",
"Smarca4", "Smarcb1", "Smarcc1", "Smarcc2", "Smarcd1",
"Smarcd2", "Smarcd3", "Smarce1", "Ss18", "Ss18l1")
k <- 10
knn.real <- get.knn(as.matrix(tsne.real), k = k)
knn.real <- data.frame(from = rep(1:nrow(knn.real$nn.index), k), to = as.vector(knn.real$nn.index), weight = 1/(1 + as.vector(knn.real$nn.dist)))
nw.real <- graph_from_data_frame(knn.real, directed = FALSE)
nw.real <- simplify(nw.real)
lc.real <- cluster_louvain(nw.real) #, gamma = 0.1
info.real$louvain <- as.factor(membership(lc.real))
lc.cent <- info.real %>% group_by(louvain) %>% select(t1, t2) %>% summarize_all(mean)
label.plot <- ggplot(info.real, aes(x = t1, y = t2, colour = louvain, label = gene_name)) +
geom_point(alpha = 0.3) + theme_bw() +
geom_label_repel(aes(label = louvain), data = lc.cent) +
geom_text_repel(
data = subset(info.real, info.real$geneName %in% baf.mem),
point.padding = NA) +
guides(colour = FALSE)
label.plot
label.plot <- ggplot(info.real, aes(x = t1, y = t2, colour = louvain, label = gene_name)) +
geom_point(alpha = 0.3) + theme_bw() +
geom_label_repel(aes(label = louvain), data = lc.cent) +
geom_text_repel(
data = subset(info.real, info.real$gene_name %in% baf.mem),
point.padding = NA) +
guides(colour = FALSE)
label.plot
ggsave("exp36-174_flt_avg-log10tpm_log2fc_CRF_tsne_baf_anno.pdf", width = 10, height = 10, units = "cm")
ggsave("exp36-174_flt_avg-log10tpm_log2fc_CRF_tsne_baf_anno.pdf", width = 12, height = 10, units = "cm")
label.plot <- ggplot(info.real, aes(x = t1, y = t2, colour = louvain, label = gene_name)) +
geom_point(alpha = 0.3) + theme_bw() +
geom_label_repel(aes(label = louvain), data = lc.cent) +
#geom_text_repel(
#  data = subset(info.real, info.real$gene_name %in% baf.mem),
#  point.padding = NA) +
guides(colour = FALSE)
label.plot
ggsave("exp36-174_flt_avg-log10tpm_log2fc_CRF_tsne.pdf", width = 12, height = 10, units = "cm")
colnames(info.real)[4]
colnames(info.real)[3]
colnames(info.real)[12]
colnames(info.real)[11]
###----- Different paramenters coloring
for (i in c(4:11) ){
#i <- 4
title <- colnames(info.real)[i]
log10tpm <- as.vector(unlist(info.real[i]))
color.plot <-  ggplot(info.real, aes(x = t1, y = t2, colour = log10tpm )) +
geom_point(alpha = 0.9, shape=19, stroke=0) + theme_bw() +
scale_color_gradient2(limits = c (0, 4), low="yellow",
high="red") +
ggtitle(title) +
theme_dark()
fname <- paste("exp36-174-mem-exh_flt_avg-log10tpm_log2fc_CRF_tsne", title, ".pdf", sep="")
ggsave(fname, width=8, height=6, units="cm")
}
for (i in c(4:11) ){
#i <- 4
title <- colnames(info.real)[i]
log10tpm <- as.vector(unlist(info.real[i]))
color.plot <-  ggplot(info.real, aes(x = t1, y = t2, colour = log10tpm )) +
geom_point(alpha = 0.9, shape=19, stroke=0) + theme_bw() +
scale_color_gradient2(limits = c (0, 4), low="yellow",
high="red") +
ggtitle(title) +
theme_dark()
fname <- paste("exp36-174-mem-exh_flt_avg-log10tpm_log2fc_CRF_tsne", title, ".pdf", sep="")
ggsave(fname, width=12, height=10, units="cm")
}
for (i in c(4:11) ){
#i <- 4
title <- colnames(info.real)[i]
log10tpm <- as.vector(unlist(info.real[i]))
color.plot <-  ggplot(info.real, aes(x = t1, y = t2, colour = log10tpm )) +
geom_point(alpha = 0.9, shape=19, stroke=0) + theme_bw() +
scale_color_gradient2(limits = c (0, 4), low="yellow",
high="red") +
ggtitle(title) +
theme_dark()
fname <- paste("exp36-174-mem-exh_flt_avg-log10tpm_log2fc_CRF_tsne", title, ".pdf", sep="")
ggsave(fname, width=14, height=10, units="cm")
}
###----- Different paramenters coloring
for (i in c(4:11) ){
#i <- 4
title <- colnames(info.real)[i]
log10tpm <- as.vector(unlist(info.real[i]))
color.plot <-  ggplot(info.real, aes(x = t1, y = t2, colour = log10tpm )) +
geom_point(alpha = 0.9, shape=19, stroke=0) + theme_bw() +
scale_color_gradient2(limits = c (0, 4), low="yellow",
high="red") +
ggtitle(title) +
theme_dark()
fname <- paste("exp36-174-mem-exh_flt_avg-log10tpm_log2fc_CRF_tsne", title, ".pdf", sep="")
ggsave(fname, width=8, height=5, units="cm")
}
###----- Different paramenters coloring
for (i in c(4:11) ){
#i <- 4
title <- colnames(info.real)[i]
log10tpm <- as.vector(unlist(info.real[i]))
color.plot <-  ggplot(info.real, aes(x = t1, y = t2, colour = log10tpm )) +
geom_point(alpha = 0.9, shape=19, stroke=0) + theme_bw() +
scale_color_gradient2(limits = c (0, 4), low="yellow",
high="red") +
ggtitle(title) +
theme_dark()
fname <- paste("exp36-174-mem-exh_flt_avg-log10tpm_log2fc_CRF_tsne", title, ".pdf", sep="")
ggsave(fname, width=8, height=6, units="cm")
}
colnames(info.real)
colnames(info.real)[12:18]
for (i in c(12:18) ){
#i <- 10
title <- colnames(info.real)[i]
log2fc <- as.vector(unlist(info.real[i]))
color.plot <-  ggplot(info.real, aes(x = t1, y = t2, colour = log2fc )) +
geom_point(alpha = 0.9, shape=19, stroke=0) + theme_bw() +
scale_color_gradient2(limits = c (-6, 5), midpoint=0,
low="blue", mid="white", high="red") +
ggtitle(title) +
theme_gray()
color.plot
print(title)
print(max(log2fc))
print(min(log2fc))
fname <- paste("exp36-174_flt_avg-log10tpm_log2fc_CRF_tsne", title, ".pdf", sep="")
ggsave(fname, width=8, height=6, units="cm")
}
for (i in c(12:18) ){
#i <- 10
title <- colnames(info.real)[i]
log2fc <- as.vector(unlist(info.real[i]))
color.plot <-  ggplot(info.real, aes(x = t1, y = t2, colour = log2fc )) +
geom_point(alpha = 0.9, shape=19, stroke=0) + theme_bw() +
scale_color_gradient2(limits = c (-7, 7), midpoint=0,
low="blue", mid="white", high="red") +
ggtitle(title) +
theme_gray()
color.plot
print(title)
print(max(log2fc))
print(min(log2fc))
fname <- paste("exp36-174_flt_avg-log10tpm_log2fc_CRF_tsne", title, ".pdf", sep="")
ggsave(fname, width=8, height=6, units="cm")
}
write.csv(info.real, file = "info.real.csv",row.names=FALSE)
x <- 1
subset.x <- subset(info.real, info.real$louvain == x)
subset.x <- subset(info.real, info.real$louvain == x)
genes.i <- as.character(unlist(subset.x$gene_name))
genes.i <- unique(genes.i)
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
#genes.i.id$ENTREZID
library("clusterProfiler")
#BiocManager::install("org.Mm.eg.db")
library("org.Mm.eg.db")
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
x <- 1
subset.x <- subset(info.real, info.real$louvain == x)
genes.i <- as.character(unlist(subset.x$gene_name))
genes.i <- unique(genes.i)
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
#genes.i.id$ENTREZID
x <- 1
subset.x <- subset(info.real, info.real$louvain == x)
genes.i <- as.character(unlist(subset.x$gene_name))
genes.i <- unique(genes.i)
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
x <- 1
subset.x <- subset(info.real, info.real$louvain == x)
genes.i <- as.character(unlist(subset.x$gene_name))
genes.i <- unique(genes.i)
genes.i
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
library(ggplot2)
library(ggrepel)
library("clusterProfiler")
#BiocManager::install("org.Mm.eg.db")
library("org.Mm.eg.db")
in.dir <- "/Volumes/EXP337/Exp337CD25KONascent/3_DE-seq/0_DEseq2_out/pval_0.05/geneName"
wk.dir <- "/Volumes/EXP337/Exp337CD25KONascent/3_DE-seq/0_DEseq2_out/pval_0.05/Pathway"
in.file.vec <- list.files(path=in.dir, pattern="*.csv")
i <- in.file.vec[1]
print(paste("Start analysis of:", i, sep=" "))
setwd(wk.dir)
in.df <- read.csv(paste(in.dir, i, sep="/"))
genes.i <- as.character(unlist(in.df$gene_name))
genes.i <- unique(genes.i)
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID", "ALIAS") )
library("org.Mm.eg.db")
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
