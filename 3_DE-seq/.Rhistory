panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5))
bbplot
bbplot <- bbplot +
geom_text_repel(aes(label=in.df$dotname), alpha=0.8 )
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title, subtitle = "Highlighted Tfh(red) / Th1(blue) associated genes") +
scale_x_continuous(limits = c(-8, 8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title, subtitle = "Highlighted Tfh(red) / Th1(blue) associated genes") +
scale_x_continuous(limits = c(-8, 8)) +
guides(fill=guide_legend(title=paste(g1," TPM", sep=""))) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
bbplot <- bbplot +
geom_text_repel(aes(label=in.df$dotname), alpha=0.8 )
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title, subtitle = "Highlighted Tfh(red) / Th1(blue) associated genes", shape=paste(g1, " TPM", sep="")) +
scale_x_continuous(limits = c(-8, 8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title, subtitle = "Highlighted Tfh(red) / Th1(blue) associated genes", size=paste(g1, " TPM", sep="")) +
scale_x_continuous(limits = c(-8, 8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
bbplot
in.file <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/plots/RUNX-AML_Runt.WT_Tfh_vs_WT_Th1--dn__RNA.WT_TFH.WT_TH1.csv"
reflists <- c("/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/TFH_associated.csv",
"/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/TH1_associated.csv")
reflistnames <- c("Tfh associated", "Th1 associated")
ref.list1 <- unlist(read_csv(reflists[1])$GeneName)
ref.list2 <- unlist(read_csv(reflists[2])$GeneName)
#--- Out png name
in.file.vec <- unlist(strsplit(in.file, "/"))
file.name.no.path <- tail(in.file.vec, n=1)
out.name <- gsub(".csv", ".png", file.name.no.path)
out.name
in.file <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/plots/RUNX-AML_Runt.WT_Tfh_vs_WT_Th1--dn__RNA.WT_TFH.WT_TH1.csv"
reflists <- c("/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/TFH_associated.csv",
"/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/TH1_associated.csv")
reflistnames <- c("Tfh associated", "Th1 associated")
ref.list1 <- unlist(read_csv(reflists[1])$GeneName)
ref.list2 <- unlist(read_csv(reflists[2])$GeneName)
#--- Out png name
out.name <- gsub(".csv", ".png", in.file)
out.name
ggsave(bbplot, out.name)
ggsave(out.name, bbplot, device="png")
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title, subtitle = "Highlighted Tfh(red) / Th1(blue) associated genes", size=paste(g1, " TPM", sep="")) +
scale_x_continuous(limits = c(-8, 8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
bbplot <- bbplot +
geom_text_repel(aes(label=in.df$dotname), alpha=0.8 )
#--- Save
ggsave(out.name, bbplot, device="png", width = 20, height = 20)
ggsave(out.name, bbplot, device="png", width = 7, height = 7, dpi=320)
in.file <- "/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/plots/RUNX-AML_Runt.WT_Tfh_vs_WT_Th1--dn__RNA.WT_TFH.WT_TH1.csv"
reflists <- c("/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/TFH_associated.csv",
"/Volumes/Huitian/jycATAC/9_Figures_plottingCodes/1_TFcontrolledRegionPathway/TH1_associated.csv")
reflistnames <- c("Tfh associated", "Th1 associated")
ref.list1 <- unlist(read_csv(reflists[1])$GeneName)
ref.list2 <- unlist(read_csv(reflists[2])$GeneName)
#--- Out png name
out.name <- gsub(".csv", ".png", in.file)
#--- X lab name
in.file.vec <- unlist(strsplit(in.file, "/"))
file.name.no.path <- tail(in.file.vec, n=1)
file.name.no.path.vec <- unlist(strsplit(file.name.no.path, "__"))
RNA.comparison <- tail( file.name.no.path.vec, n=1)
RNA.comparison <- gsub("RNA.", "", RNA.comparison)
RNA.comparison <- gsub(".csv", "", RNA.comparison)
RNA.comparison <- gsub("\\.", " v.s. ", RNA.comparison)
R1 <- unlist(strsplit(RNA.comparison, " v.s. "))[1]
R2 <- unlist(strsplit(RNA.comparison, " v.s. "))[2]
x.name <- paste(RNA.comparison, "log2FC", sep=" ")
x.name <- paste(x.name, "  (postivie value: ", R1, " > ", R2, ")", sep="")
x.name
#--- Figure title
fig.title <- "Genes nearby \n"
atac.name <- file.name.no.path.vec[length(file.name.no.path.vec) - 1]
TF.full <- unlist(strsplit(atac.name, "\\."))[1]
fig.title <- paste(fig.title, TF.full, " motifs \n in regions ", sep="")
updn <- tail(unlist(strsplit(atac.name, "--")), n=1)
updn <- gsub("dn", "less accessible in", updn)
updn <- gsub("up", "more accessible in", updn)
fig.title <- paste(fig.title, updn, sep="")
atat.comparison <- tail(unlist(strsplit(atac.name, "\\.")), n=1)
atat.comparison <- unlist(strsplit(atat.comparison, "--"))[1]
g1 <- unlist(strsplit(atat.comparison, "_vs_"))[1]
g2 <- unlist(strsplit(atat.comparison, "_vs_"))[2]
fig.title <- paste(fig.title, "\n", g1, " than ", g2, sep="")
in.df <- read_csv(in.file)
in.df <- in.df[order(-in.df$log2FC), ]
in.df["G1sqrt"] <- sqrt(in.df$G1)
in.df["Ranks"] <- factor(c(1:nrow(in.df)))
in.df$geneName <- factor(in.df$geneName, levels = in.df$geneName)
dot.col <- c()
dot.size <- c()
dot.name <- c()
for (x in c(1:length(in.df$geneName))){
genex <- as.character(unlist(in.df$geneName))[x]
tpmsqrtx <- unlist(in.df$G1sqrt)[x]
if (genex %in% ref.list1){
dot.col <- c(dot.col, "red")
dot.size <- c(dot.size, tpmsqrtx)
dot.name <- c(dot.name, genex)
}
else if (genex %in% ref.list2){
dot.col <- c(dot.col, "blue")
dot.size <- c(dot.size, tpmsqrtx)
dot.name <- c(dot.name, genex)
}
else {
dot.col <- c(dot.col, "grey")
dot.size <- c(dot.size, 0)
dot.name <- c(dot.name, "")
}
}
in.df["dotcol"] <- dot.col
in.df["dotsize"] <- dot.size
in.df["dotname"] <- dot.name
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks)) +
geom_point(color = "grey", shape=20, size = 1)
bbplot
bbplot <- ggplot(in.df, aes(x=in.df$log2FC, y=in.df$Ranks, size=dot.size)) +
geom_point(alpha=0.7, color = dot.col, shape=20) +
geom_vline(xintercept=0, colour="black") +
geom_vline(xintercept=2, colour="grey", size=0.1) +
geom_vline(xintercept=-2, colour="grey", size=0.1) +
xlab(x.name) + labs(title = fig.title, subtitle = "Highlighted Tfh(red) / Th1(blue) associated genes", size=paste(g1, " TPM", sep="")) +
scale_x_continuous(limits = c(-8, 8)) +
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank(),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid', colour = "grey"),
plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
bbplot <- bbplot +
geom_text_repel(aes(label=in.df$dotname), alpha=0.8 )
#--- Save
ggsave(out.name, bbplot, device="png", width = 7, height = 7, dpi=320)
print(.libPaths())
library(ChIPQC)
print(.libPaths())
which R
read.csv("1.csv")
source('/Volumes/Yolanda/CRF_Screen/0_Codes/3_tsne_cbs-plot_byGene_groups.R')
##########---------- Main
in_file <- "/Volumes/Yolanda/CRF_Screen/InVitro/2_0_t-test_by_gene/compiled_Amt/per5/Amt_normbycontrolZP_t-test.by.geneavg_z-score_tsne_per5.csv"
in_df <- read.csv(in.file)
##########---------- Main
in_file <- "/Volumes/Yolanda/CRF_Screen/InVitro/2_0_t-test_by_gene/compiled_Amt/per5/Amt_normbycontrolZP_t-test.by.geneavg_z-score_tsne_per5.csv"
in_df <- read.csv(in_file)
###----- Group1
slt_df1 <- subset(in_df, in_df$t2>50)
g1_list <- unlist(slt_df1$gene_name)
#cbs_plot(in_file, g1_list, "g1")
###----- Group2
slt_df2 <- subset(in_df, (in_df$t1>50)&(in_df$t2<0))
g2_list <- unlist(slt_df2$gene_name)
#cbs_plot(in_file, g2_list, "g2")
###----- Group3
slt_df3 <- subset(in_df, in_df$t1 < -70)
g3_list <- unlist(slt_df3$gene_name)
#cbs_plot(in_file, g3_list, "g3")
###----- Group4
slt_df4 <- subset(in_df, (in_df$t1 < -25)&(in_df$t1 > -70) | ( ((in_df$t1 < 0)&(in_df$t1 > -50)) & ((in_df$t2>0)&(in_df$t2<50)) ) )
g4_list <- unlist(slt_df4$gene_name)
#cbs_plot(in_file, g4_list, "g4")
###----- Group5
slt_df5 <- subset(in_df, in_df$t2 < -30)
g5_list <- unlist(slt_df5$gene_name)
#cbs_plot(in_file, g5_list, "g5")
###----- Group6
slt_df6 <- subset(in_df, (in_df$t1 > -25)&(in_df$t1 <20)&(in_df$t2<0)&(in_df$t2> -30))
g6_list <- unlist(slt_df6$gene_name)
#cbs_plot(in_file, g6_list, "g6")
###----- Group7
slt_df7 <- subset(in_df, (in_df$t1 > 50)&(in_df$t2> 0))
g7_list <- unlist(slt_df7$gene_name)
#cbs_plot(in_file, g7_list, "g7")
###----- Group8
slt_df8 <- subset(in_df, (in_df$t1 > 30)&(in_df$t1< 50)&(in_df$t2<25))
g8_list <- unlist(slt_df8$gene_name)
#cbs_plot(in_file, g8_list, "g8")
###----- Group9
slt_df9 <- subset(in_df, (in_df$t1 < 30)&(in_df$t1 > 15)&(in_df$t2<25))
g9_list <- unlist(slt_df9$gene_name)
#cbs_plot(in_file, g9_list, "g9")
###----- Group10
slt_df10 <- subset(in_df, (in_df$t1 < 50)&(in_df$t1 > 0)&(in_df$t2<50)&(in_df$t2>25))
g10_list <- unlist(slt_df10$gene_name)
#cbs_plot(in_file, g10_list, "g10")
group_lists <- list(g1_list, g2_list, g3_list, g4_list, g5_list,
g6_list, g7_list, g8_list, g9_list, g10_list)
genes.i <- all_df$gene_name
group_lists <- list(g1_list, g2_list, g3_list, g4_list, g5_list,
g6_list, g7_list, g8_list, g9_list, g10_list)
genes.i <- group_lists[1]
genes.i
genes.i <- as.character(unlist(group_lists[1]))
genes.i
egoBP <- enrichGO(gene = genes.i, keyType = 'SYMBOL', OrgDb = org.Mm.eg.db, ont = "BP", pAdjustMethod = "BH", qvalueCutoff = 0.05, readable = TRUE)
select(org.Mm.eg.db, genes.i, c("ENTREZID","GENENAME"), "ALIAS")
select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
genes.i.id
genes.i.id$ENTREZID
egoBP <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "BP", pAdjustMethod = "BH", qvalueCutoff = 0.05, readable = TRUE)
egoBP
for (i in c(1:length(group_lists))) {
setwd("/Volumes/Yolanda/CRF_Screen/InVitro/2_0_t-test_by_gene/compiled_Amt")
genes.i <- as.character(unlist(group_lists[i]))
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
genes.i.id$ENTREZID
egoBP <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "BP", pAdjustMethod = "BH", qvalueCutoff = 0.05, readable = TRUE)
egoCC <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "CC", pAdjustMethod = "BH", qvalueCutoff = 0.05, readable = TRUE)
egoMF <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "MF", pAdjustMethod = "BH", qvalueCutoff = 0.05, readable = TRUE)
# Dotplot visualization
if (!is.null(egoBP)){
egoBP.dotplot <- dotplot(egoBP, showCategory=25)
ggsave(paste(i,"_BP_dotplot.pdf",sep=""), egoBP.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
}
if(!is.null(egoCC)){
egoCC.dotplot <- dotplot(egoCC, showCategory=25)
ggsave(paste(i,"_CC_dotplot.pdf",sep=""), egoCC.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
}
if(!is.null(egoMF)){
egoMF.dotplot <- dotplot(egoMF, showCategory=25)
ggsave(paste(i,"_MF_dotplot.pdf",sep=""), egoMF.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
}
}
source('/Volumes/Yolanda/CRF_Screen/0_Codes/3_tsne_cbs-plot_byGene.R')
source('/Volumes/Yolanda/CRF_Screen/0_Codes/3_tsne_cbs-plot_byGene.R')
install.packages('Seurat')
library(Seurat)
library(dplyr)
########## Seurat for ScRNAseq ##########
# Author: Huitian (Yolanda) Diao
# Apr 314th, 2019
# CD25KO ScRNAseq analysis
########## Libraries ##########
library(dplyr)
library(Seurat)
sc.data <- Read10X(data.dir = "/Volumes/HD_EXP334/Exp334CD25KOSc/n10000_outs/filtered_feature_bc_matrix")
sc.data <- Read10X(data.dir = "/Volumes/HD_EXP334/Exp334CD25KOSc/n10000_outs/filtered_feature_bc_matrix")
# Save features.tsv to genes.tsv
sc.data <- Read10X(data.dir = "/Volumes/HD_EXP334/Exp334CD25KOSc/n10000_outs/filtered_feature_bc_matrix")
# Initialize the Seurat object with the raw (non-normalized data)
sc <- CreateSeuratObject(counts = sc.data, project = "Exp334CD25KO", min.cells = 3, min.features = 200)
sc <- CreateSeuratObject(counts = sc.data, project = "Exp334CD25KO", min.cells = 3, min.features = 200)
sc <- CreateSeuratObject(sc.data, project = "Exp334CD25KO", min.cells = 3, min.features = 200)
# The [[ operator can add columns to object metadata. This is a great place to stash QC stats
pbmc[["percent.mt"]] <- PercentageFeatureSet(object = pbmc, pattern = "^MT-")
# The [[ operator can add columns to object metadata. This is a great place to stash QC stats
pbmc[["percent.mt"]] <- PercentageFeatureSet(object = sc, pattern = "^MT-")
# Visualize QC metrics as a violin plot
VlnPlot(object = pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
# Visualize QC metrics as a violin plot
VlnPlot(object = pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"))
VlnPlot(object = sc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"))
str(sc)
VlnPlot(object = sc, features = c( "nCount_RNA", "percent.mt"))
sc <- NormalizeData(sc, normalization.method = "LogNormalize", scale.factor = 10000)
head(sc.data)
tail(sc.data)
str(sc.data)
sc.data[c("CD25KO_TotalA","CD25WT_TotalA","EndoNAV_TotalA","P14NAV_TotalA"), 1:30]
head(sc.data)
str(sc.data)
sc.data$i
sc.data@i
sc.data@Dim
sc.data@Dimnames
str(sc.data)
str(sc.data@Dimnames)
sc.data@Dimnames[0]
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
library(magrittr)
BiocManager::install("MEDIPS", version = "3.8")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
library(ggplot2)
library(dplyr)
libray(magrittr)
library(magrittr)
library(ggrepel)
tsne.real = read.csv("https://docs.google.com/uc?id=1KArwfOd5smzuCsrpgW9Xpf9I06VOW4ga&export=download")
info.real = tsne.real
ggplot(tsne.real, aes(x = tsne1, y = tsne2)) + geom_point(alpha = 0.1) +
theme_bw()
k = 100
knn.real = get.knn(as.matrix(tsne.real), k = k)
knn.real = data.frame(from = rep(1:nrow(knn.real$nn.index),
k), to = as.vector(knn.real$nn.index), weight = 1/(1 + as.vector(knn.real$nn.dist)))
nw.real = graph_from_data_frame(knn.real, directed = FALSE)
nw.real = simplify(nw.real)
lc.real = cluster_louvain(nw.real, gamma = 0.1)
info.real$louvain = as.factor(membership(lc.real))
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
ggplot(info.real, aes(x = tsne1, y = tsne2, colour = louvain)) +
geom_point(alpha = 0.3) + theme_bw() + geom_label_repel(aes(label = louvain),
data = lc.cent) + guides(colour = FALSE)
k = 100
knn.real = get.knn(as.matrix(tsne.real), k = k)
library(igraph)
library(FNN)
install.packages("FNN")
library(FNN)
k = 100
knn.real = get.knn(as.matrix(tsne.real), k = k)
knn.real = data.frame(from = rep(1:nrow(knn.real$nn.index),
k), to = as.vector(knn.real$nn.index), weight = 1/(1 + as.vector(knn.real$nn.dist)))
nw.real = graph_from_data_frame(knn.real, directed = FALSE)
nw.real = simplify(nw.real)
lc.real = cluster_louvain(nw.real, gamma = 0.1)
info.real$louvain = as.factor(membership(lc.real))
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
ggplot(info.real, aes(x = tsne1, y = tsne2, colour = louvain)) +
geom_point(alpha = 0.3) + theme_bw() + geom_label_repel(aes(label = louvain),
data = lc.cent) + guides(colour = FALSE)
library(igraph)
lc.real = cluster_louvain(nw.real, gamma = 0.1)
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
info.real$louvain = as.factor(membership(lc.real))
lc.real = cluster_louvain(nw.real, gamma = 0.1)
lc.real = cluster_louvain(nw.real) #, gamma = 0.1
info.real$louvain = as.factor(membership(lc.real))
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
lc.real = cluster_louvain(nw.real) #, gamma = 0.1
info.real$louvain = as.factor(membership(lc.real))
lc.cent = info.real %>% group_by(louvain) %>% select(tsne1,
tsne2) %>% summarize_all(mean)
ggplot(info.real, aes(x = tsne1, y = tsne2, colour = louvain)) +
geom_point(alpha = 0.3) + theme_bw() + geom_label_repel(aes(label = louvain),
data = lc.cent) + guides(colour = FALSE)
browseVignettes("DESeq2")
packageVersion("DESeq2")
DESmat<-DESeqDataSetFromMatrix(countData = DeseqData, colData = DeseqDesign,design = ~ condition)
#---- Read input file
DeseqData <- read.csv(count.file,header=TRUE, row.names=1)
#---- Meta data
DeseqDesign <- data.frame(row.names=rownames,condition=as.factor(conds))
#---- Generate DEseq matrix
DESmat <- DESeqDataSetFromMatrix(countData = DeseqData, colData = DeseqDesign,design = ~ condition)
install.packages("gridExtra")
install.packages("gridExtra")
install.packages("gridExtra")
install.packages("yaml")
########## Imports ##########
library(DEseq2)
library(DEseq2)
BiocManager::install("DESeq2")
install.packages("RcppArmadillo")
library(DEseq2)
library(DEseq2)
install.packages("Rcpp","RcppArmadillo","inline","rbenchmark")
install.packages("Rcpp", "RcppArmadillo", "inline", "rbenchmark")
install.packages("Rcpp", "RcppArmadillo", "inline", "rbenchmark")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
########## DEseq2 for Nascent RNA-seq count table ##########
# Author: Huitian (Yolanda) Diao
# April 30th, 2019
# Dependencies:
# -| Compiled count table <- 2_1_collect_count_files.py
# --| HT-seq count file <- HT-seq count <- 2_0_ht-seq_count.dupr.sh
# ---| Strand seperated bam file <- 1_3_splitStrands_bamTobdg_add-chr_bdgTobw_new.sh
# ---| Exon reference GFF3 file
# ----| Biomart: http://useast.ensembl.org/biomart/martview/a4b3d3135f51db16df0294bef537f063
# ----| BioMart-out-csv_To_Gff.sh  &  Gff_rmdup.py
######################################## Imports ########################################
library(DESeq2)
###--- Config
wk.dir <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/3_DE-seq"
op.dir <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/3_DE-seq"
setwd(wk.dir)
count.file <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/2_Compiled_csv/Exp337_dupr_all_count_c5.csv"
row.names <- c("KO_0h_rep1_dupr", "KO_0h_rep2_dupr", "KO_0h_rep3_dupr", "KO_24h_rep1_dupr",
"KO_24h_rep2_dupr", "KO_24h_rep3_dupr", "KO_48h_rep1_dupr", "KO_48h_rep2_dupr",
"KO_48h_rep3_dupr", "KO_6h_rep1_dupr", "KO_6h_rep2_dupr", "WT_0h_rep1_dupr",
"WT_0h_rep2_dupr", "WT_0h_rep3_dupr", "WT_24h_rep1_dupr", "WT_24h_rep2_dupr",
"WT_24h_rep3_dupr", "WT_48h_rep1_dupr", "WT_48h_rep2_dupr", "WT_48h_rep3_dupr",
"WT_6h_rep1_dupr", "WT_6h_rep2_dupr", "WT_6h_rep3_dupr")
conds <- c("KO_0h", "KO_0h", "KO_0h", "KO_24h", "KO_24h", "KO_24h", "KO_48h", "KO_48h", "KO_48h", "KO_6h", "KO_6h",
"WT_0h", "WT_0h", "WT_0h", "WT_24h", "WT_24h", "WT_24h", "WT_48h", "WT_48h", "WT_48h", "WT_6h", "WT_6h", "WT_6h")
#---- Read input file
DeseqData <- read.csv(count.file, header=TRUE, row.names=1)
head(DeseqData)
count.file <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/2_Compiled_csv/Exp337_dupr_all_count_c5.csv"
row.names <- c("KO_0h_rep1_dupr", "KO_0h_rep2_dupr", "KO_0h_rep3_dupr", "KO_24h_rep1_dupr",
"KO_24h_rep2_dupr", "KO_24h_rep3_dupr", "KO_48h_rep1_dupr", "KO_48h_rep2_dupr",
"KO_48h_rep3_dupr", "KO_6h_rep1_dupr", "KO_6h_rep2_dupr", "WT_0h_rep1_dupr",
"WT_0h_rep2_dupr", "WT_0h_rep3_dupr", "WT_24h_rep1_dupr", "WT_24h_rep2_dupr",
"WT_24h_rep3_dupr", "WT_48h_rep1_dupr", "WT_48h_rep2_dupr", "WT_48h_rep3_dupr",
"WT_6h_rep1_dupr", "WT_6h_rep2_dupr", "WT_6h_rep3_dupr")
conds <- c("KO_0h", "KO_0h", "KO_0h", "KO_24h", "KO_24h", "KO_24h", "KO_48h", "KO_48h", "KO_48h", "KO_6h", "KO_6h",
"WT_0h", "WT_0h", "WT_0h", "WT_24h", "WT_24h", "WT_24h", "WT_48h", "WT_48h", "WT_48h", "WT_6h", "WT_6h", "WT_6h")
#---- Read input file
DeseqData <- read.csv(count.file, header=TRUE, row.names=1)
head(DeseqData)
DeseqDesign <- data.frame(row.names=row.names,condition=as.factor(conds))
#---- Generate DEseq matrix
DESmat <- DESeqDataSetFromMatrix(countData = DeseqData, colData = DeseqDesign,design = ~ condition)
#---- Run DEseq
DESmat <- DESeq(DESmat)
#---- Output
setwd(op.dir)
WT_6_0 <- results(DESmat, contrast=c("condition", "WT_6h", "WT_0h"))
WT_24_0 <- results(DESmat, contrast=c("condition", "WT_24h", "WT_0h"))
WT_48_0 <- results(DESmat, contrast=c("condition", "WT_48h", "WT_0h"))
write.csv(WT_6_0, "WT-6h_vs_WT-0h.csv")
write.csv(WT_6_0, "WT-24h_vs_WT-0h.csv")
write.csv(WT_6_0, "WT-48h_vs_WT-0h.csv")
KO_6_0 <- results(DESmat, contrast=c("condition", "KO_6h", "KO_0h"))
KO_24_0 <- results(DESmat, contrast=c("condition", "KO_24h", "KO_0h"))
KO_48_0 <- results(DESmat, contrast=c("condition", "KO_48h", "KO_0h"))
write.csv(KO_6_0, "KO-6h_vs_KO-0h.csv")
write.csv(KO_6_0, "KO-24h_vs_KO-0h.csv")
write.csv(KO_6_0, "KO-48h_vs_KO-0h.csv")
WT0_KO0 <- results(DESmat, contrast=c("condition", "WT_0h", "KO_0h"))
WT6_KO6 <- results(DESmat, contrast=c("condition", "WT_6h", "KO_6h"))
WT24_KO24 <- results(DESmat, contrast=c("condition", "WT_24h", "KO_24h"))
WT48_KO48 <- results(DESmat, contrast=c("condition", "WT_48h", "KO_48h"))
write.csv(WT0_KO0, "WT-0h_vs_KO-0h.csv")
write.csv(WT0_KO0, "WT-6h_vs_KO-6h.csv")
write.csv(WT0_KO0, "WT-24h_vs_KO-24h.csv")
write.csv(WT0_KO0, "WT-48h_vs_KO-48h.csv")
WT_6_0 <- results(DESmat, contrast=c("condition", "WT_6h", "WT_0h"))
WT_24_0 <- results(DESmat, contrast=c("condition", "WT_24h", "WT_0h"))
WT_48_0 <- results(DESmat, contrast=c("condition", "WT_48h", "WT_0h"))
write.csv(WT_6_0, "WT-6h_vs_WT-0h.csv")
write.csv(WT_24_0, "WT-24h_vs_WT-0h.csv")
write.csv(WT_48_0, "WT-48h_vs_WT-0h.csv")
KO_6_0 <- results(DESmat, contrast=c("condition", "KO_6h", "KO_0h"))
KO_24_0 <- results(DESmat, contrast=c("condition", "KO_24h", "KO_0h"))
KO_48_0 <- results(DESmat, contrast=c("condition", "KO_48h", "KO_0h"))
write.csv(KO_6_0, "KO-6h_vs_KO-0h.csv")
write.csv(KO_24_0, "KO-24h_vs_KO-0h.csv")
write.csv(KO_48_0, "KO-48h_vs_KO-0h.csv")
WT0_KO0 <- results(DESmat, contrast=c("condition", "WT_0h", "KO_0h"))
WT6_KO6 <- results(DESmat, contrast=c("condition", "WT_6h", "KO_6h"))
WT24_KO24 <- results(DESmat, contrast=c("condition", "WT_24h", "KO_24h"))
WT48_KO48 <- results(DESmat, contrast=c("condition", "WT_48h", "KO_48h"))
write.csv(WT0_KO0, "WT-0h_vs_KO-0h.csv")
write.csv(WT6_KO6, "WT-6h_vs_KO-6h.csv")
write.csv(WT24_KO24, "WT-24h_vs_KO-24h.csv")
write.csv(WT48_KO48, "WT-48h_vs_KO-48h.csv")
