}
# Calculate rpk
for (col.name in col.names) {
new.col.name <- paste(col.name, "rpk", sep="_")
count.tb <- count.tb %>%
mutate_(!!sym(new.col.name) = !!sym(col.name) / size)
}
for (col.name in col.names)
{
new.col.name <- paste(col.name, "rpk", sep="_")
count.tb <- count.tb %>%
mutate_(!!sym(new.col.name) = !!sym(col.name) / size)
}
# Calculate rpk
for (col.name in col.names)
{
new.col.name <- paste(col.name, "rpk", sep="_")
print(new.col.name)
count.tb <- count.tb %>%
mutate_(!!sym(new.col.name) = !!sym(col.name) / size)
}
# Calculate rpk
for (col.name in col.names)
{
new.col.name <- paste(col.name, "rpk", sep="_")
print(new.col.name)
count.tb <- count.tb %>%
mutate_(!!sym(new.col.name) := !!sym(col.name) / size)
}
# Calculate rpk
for (col.name in col.names)
{
new.col.name <- paste(col.name, "rpk", sep="_")
print(new.col.name)
count.tb <- count.tb %>%
mutate_(!!sym(new.col.name) = !!sym(col.name) / size)
}
########## Pathway analysis ##########
# Author: Huitian (Yolanda) Diao
# April 30th, 2019
# Dependencies:
# -| DEseq2 output
# --| Compiled count table <- 2_1_collect_count_files.py
# ---| HT-seq count file <- HT-seq count <- 2_0_ht-seq_count.dupr.sh
# ----| Strand seperated bam file <- 1_3_splitStrands_bamTobdg_add-chr_bdgTobw_new.sh
# ----| Exon reference GFF3 file
# -----| Biomart: http://useast.ensembl.org/biomart/martview/a4b3d3135f51db16df0294bef537f063
# -----| BioMart-out-csv_To_Gff.sh  &  Gff_rmdup.py
######################################## Imports ########################################
library(ggplot2)
library(ggrepel)
library("clusterProfiler")
#BiocManager::install("org.Mm.eg.db")
library("org.Mm.eg.db")
##########---------- Main
in.dir <- "/Volumes/EXP337/Exp337CD25KONascent/3_DE-seq/DEseq2_out/1.2.1_pval_GN"
wk.dir <- "/Volumes/EXP337/Exp337CD25KONascent/3_DE-seq/DEseq2_out/1.2.1.1_pval_GN_pathway"
in.file.vec <- list.files(path=in.dir, pattern="*.csv")
in.file.vec
length(in.file.vec)
in.file.vec <- tail(in.file.vec, n=6)
in.file.vec
for (i in in.file.vec) {
#i <- in.file.vec[1]
print(paste("Start analysis of:", i, sep=" "))
setwd(wk.dir)
in.df <- read.csv(paste(in.dir, i, sep="/"))
genes.i <- as.character(unlist(in.df$gene_name))
genes.i <- unique(genes.i)
genes.i.id <- select(org.Mm.eg.db, genes.i, c("ENTREZID"), "ALIAS")
#genes.i.id$ENTREZID
egoBP <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "BP", pAdjustMethod = "none", pvalueCutoff = 0.05, readable = TRUE)
egoCC <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "CC", pAdjustMethod = "none", pvalueCutoff = 0.05, readable = TRUE)
egoMF <- enrichGO(gene = genes.i.id$ENTREZID, keyType = 'ENTREZID', OrgDb = org.Mm.eg.db, ont = "MF", pAdjustMethod = "none", pvalueCutoff = 0.05, readable = TRUE)
# Dotplot visualization
if (!is.null(egoBP)){
pdf.name <- paste(i,"_BP_dotplot.pdf",sep="")
csv.name <- paste(i,"_BP_dotplot.csv",sep="")
write.csv(egoBP@result, file=csv.name, row.names=FALSE)
egoBP.dotplot <- dotplot(egoBP, x="count", showCategory=25)
ggsave(pdf.name, egoBP.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
}
if(!is.null(egoCC)){
csv.name <- paste(i,"_CC_dotplot.csv",sep="")
pdf.name <- paste(i,"_CC_dotplot.pdf",sep="")
write.csv(egoCC@result, file=csv.name, row.names=FALSE)
egoCC.dotplot <- dotplot(egoCC, x="count", showCategory=25)
ggsave(pdf.name, egoCC.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
}
if(!is.null(egoMF)){
csv.name <- paste(i,"_MF_dotplot.csv",sep="")
pdf.name <- paste(i,"_MF_dotplot.pdf",sep="")
write.csv(egoMF@result, file=csv.name, row.names=FALSE)
egoMF.dotplot <- dotplot(egoMF, x="count", showCategory=25)
ggsave(paste(i,"_MF_dotplot.pdf",sep=""), egoMF.dotplot, device = "pdf", width = 30, height = 20, units = "cm")
}
}
# Calculate rpk
for (col.name in col.names) {
new.col.name <- paste(col.name, "rpk", sep="_")
print(new.col.name)
count.tb <- count.tb %>%
mutate_(!!sym(new.col.name) = col.name / size)
}
# Calculate rpk
for (col.name in col.names) {
new.col.name <- paste(col.name, "rpk", sep="_")
div.name <- paste0(new.col.name, "=", col.name, "/size")
print(new.col.name)
count.tb <- count.tb %>%
mutate_(.dots = div.name)
}
col.names
col.numeric <- colnames[1:10]
col.numeric
col.numeric <- col.names[1:10]
col.numeric
col.numeric <- col.names[2:24]
col.numeric
# Calculate rpk
for (col.name in col.numeric) {
new.col.name <- paste(col.name, "rpk", sep="_")
div.name <- paste0(new.col.name, "=", col.name, "/size")
print(new.col.name)
count.tb <- count.tb %>%
mutate_(.dots = div.name)
}
colnames(count.tb)
# Read files
count.file <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/2_compiled_csv/Exp337_all_c5.csv"
ref.file <- "/Volumes/EXP337/Exp337CD25KONascent/References/GRCm38_exon_rmdup_srt_cb_srt_dupr.csv"
count.tb <- read_csv(count.file)
ref.tb <- read_csv(ref.file)
# Transform tibbles
ref.tb <- ref.tb %>%
mutate(size = abs(start-end)) %>%
separate(exon_id, sep="=", into=c("type", "name")) %>%
select("name", "size")
# Combine tibble
count.tb <- inner_join(count.tb, ref.tb, by="name")
colnames(ref.tb)
col.names <- colnames(count.tb)
col.numeric <- col.names[2:24]
col.numeric
# Calculate rpk
for (col.name in col.numeric) {
new.col.name <- paste(col.name, "rpk", sep="_")
#div.name <- paste0(new.col.name, "=", col.name, "/size")
print(new.col.name)
count.tb <- count.tb %>%
mutate(!!sym(new.col.name) != !!sym(col.name) / size)
}
colnames(count.tb)
# Calculate rpk
for (col.name in col.numeric) {
new.col.name <- paste(col.name, "rpk", sep="_")
#div.name <- paste0(new.col.name, "=", col.name, "/size")
print(new.col.name)
count.tb <- count.tb %>%
mutate(!!sym(new.col.name) := !!sym(col.name) / size)
}
colnames(count.tb)
head(count.tb)
count.tb$KO_0h_rep1_dupr_rpk
wk.dir <- "/Volumes/EXP337/Exp337CD25KONascent/3_tpm"
setwd(wk.dir)
# Read files
count.file <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/2_compiled_csv/Exp337_all_c5.csv"
ref.file <- "/Volumes/EXP337/Exp337CD25KONascent/References/GRCm38_exon_rmdup_srt_cb_srt_dupr.csv"
count.tb <- read_csv(count.file)
ref.tb <- read_csv(ref.file)
# Transform tibbles
ref.tb <- ref.tb %>%
mutate(size = abs(start-end)) %>%
separate(exon_id, sep="=", into=c("type", "name")) %>%
select("name", "size")
# Combine tibble
count.tb <- inner_join(count.tb, ref.tb, by="name")
colnames(ref.tb)
col.names <- colnames(count.tb)
col.numeric <- col.names[2:24]
rpk.names <- c()
# Calculate rpk
for (col.name in col.numeric) {
new.col.name <- paste(col.name, "rpk", sep="_")
rpk.names <- rpk.names + c(new.col.name)
#div.name <- paste0(new.col.name, "=", col.name, "/size")
print(new.col.name)
count.tb <- count.tb %>%
mutate(!!sym(new.col.name) := !!sym(col.name) / size * 1000)
}
rpk.names <- c()
# Calculate rpk
for (col.name in col.numeric) {
new.col.name <- paste(col.name, "rpk", sep="_")
rpk.names <- c(rpk.names, c(new.col.name))
#div.name <- paste0(new.col.name, "=", col.name, "/size")
print(new.col.name)
count.tb <- count.tb %>%
mutate(!!sym(new.col.name) := !!sym(col.name) / size * 1000)
}
count.tb$WT_6h_rep1_dupr_rpk
rpm.names <- c('name', rpk.names)
count.tb <- count.tb %>% select(one_of(rpk.names))
head(count.tb)
colnames(head(count.tb))
wk.dir <- "/Volumes/EXP337/Exp337CD25KONascent/3_tpm"
setwd(wk.dir)
# Read files
count.file <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/2_compiled_csv/Exp337_all_c5.csv"
ref.file <- "/Volumes/EXP337/Exp337CD25KONascent/References/GRCm38_exon_rmdup_srt_cb_srt_dupr.csv"
count.tb <- read_csv(count.file)
ref.tb <- read_csv(ref.file)
# Transform tibbles
ref.tb <- ref.tb %>%
mutate(size = abs(start-end)) %>%
separate(exon_id, sep="=", into=c("type", "name")) %>%
select("name", "size")
# Combine tibble
count.tb <- inner_join(count.tb, ref.tb, by="name")
colnames(ref.tb)
col.names <- colnames(count.tb)
col.numeric <- col.names[2:24]
rpk.names <- c("names")
# Calculate rpk
for (col.name in col.numeric) {
new.col.name <- paste(col.name, "rpk", sep="_")
rpk.names <- c(rpk.names, c(new.col.name))
#div.name <- paste0(new.col.name, "=", col.name, "/size")
print(new.col.name)
count.tb <- count.tb %>%
mutate(!!sym(new.col.name) := !!sym(col.name) / size * 1000) %>%
select(one_of(rpk.names))
}
colnames(head(count.tb))
colnames(head(count.tb))
wk.dir <- "/Volumes/EXP337/Exp337CD25KONascent/3_tpm"
setwd(wk.dir)
# Read files
count.file <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/2_compiled_csv/Exp337_all_c5.csv"
ref.file <- "/Volumes/EXP337/Exp337CD25KONascent/References/GRCm38_exon_rmdup_srt_cb_srt_dupr.csv"
count.tb <- read_csv(count.file)
ref.tb <- read_csv(ref.file)
# Transform tibbles
ref.tb <- ref.tb %>%
mutate(size = abs(start-end)) %>%
separate(exon_id, sep="=", into=c("type", "name")) %>%
select("name", "size")
# Combine tibble
count.tb <- inner_join(count.tb, ref.tb, by="name")
colnames(ref.tb)
col.names <- colnames(count.tb)
col.numeric <- col.names[2:24]
rpk.names <- c("names")
# Calculate rpk
for (col.name in col.numeric) {
new.col.name <- paste(col.name, "rpk", sep="_")
rpk.names <- c(rpk.names, c(new.col.name))
#div.name <- paste0(new.col.name, "=", col.name, "/size")
print(new.col.name)
count.tb <- count.tb %>%
mutate(!!sym(new.col.name) := !!sym(col.name) / size * 1000)
}
colnames(head(count.tb))
count.tb$KO_0h_rep1_dupr[1:5]
count.tb$KO_0h_rep1_dupr_rpk[1:5]
count.tb$size[1:5]
rpk.names
rpm.names <- c("KO_0h_rep1_dupr_rpk", "KO_0h_rep2_dupr_rpk", "KO_0h_rep3_dupr_rpk", "KO_24h_rep1_dupr_rpk", "KO_24h_rep2_dupr_rpk" "KO_24h_rep3_dupr_rpk" "KO_48h_rep1_dupr_rpk" "KO_48h_rep2_dupr_rpk" "KO_48h_rep3_dupr_rpk", "KO_6h_rep1_dupr_rpk", "KO_6h_rep2_dupr_rpk", "WT_0h_rep1_dupr_rpk", "WT_0h_rep2_dupr_rpk", "WT_0h_rep3_dupr_rpk" , "WT_24h_rep1_dupr_rpk" "WT_24h_rep2_dupr_rpk" "WT_24h_rep3_dupr_rpk" "WT_48h_rep1_dupr_rpk" "WT_48h_rep2_dupr_rpk", "WT_48h_rep3_dupr_rpk" "WT_6h_rep1_dupr_rpk", "WT_6h_rep2_dupr_rpk", "WT_6h_rep3_dupr_rpk")
rpm.names <- c("KO_0h_rep1_dupr_rpk", "KO_0h_rep2_dupr_rpk", "KO_0h_rep3_dupr_rpk", "KO_24h_rep1_dupr_rpk", "KO_24h_rep2_dupr_rpk" "KO_24h_rep3_dupr_rpk" "KO_48h_rep1_dupr_rpk" "KO_48h_rep2_dupr_rpk" "KO_48h_rep3_dupr_rpk", "KO_6h_rep1_dupr_rpk", "KO_6h_rep2_dupr_rpk", "WT_0h_rep1_dupr_rpk", "WT_0h_rep2_dupr_rpk", "WT_0h_rep3_dupr_rpk" , "WT_24h_rep1_dupr_rpk", "WT_24h_rep2_dupr_rpk" "WT_24h_rep3_dupr_rpk" "WT_48h_rep1_dupr_rpk" "WT_48h_rep2_dupr_rpk", "WT_48h_rep3_dupr_rpk" "WT_6h_rep1_dupr_rpk", "WT_6h_rep2_dupr_rpk", "WT_6h_rep3_dupr_rpk")
rpk.names <- c("KO_0h_rep1_dupr_rpk", "KO_0h_rep2_dupr_rpk", "KO_0h_rep3_dupr_rpk", "KO_24h_rep1_dupr_rpk", "KO_24h_rep2_dupr_rpk", "KO_24h_rep3_dupr_rpk", "KO_48h_rep1_dupr_rpk", "KO_48h_rep2_dupr_rpk", "KO_48h_rep3_dupr_rpk", "KO_6h_rep1_dupr_rpk", "KO_6h_rep2_dupr_rpk", "WT_0h_rep1_dupr_rpk", "WT_0h_rep2_dupr_rpk", "WT_0h_rep3_dupr_rpk" , "WT_24h_rep1_dupr_rpk", "WT_24h_rep2_dupr_rpk" "WT_24h_rep3_dupr_rpk" "WT_48h_rep1_dupr_rpk" "WT_48h_rep2_dupr_rpk", "WT_48h_rep3_dupr_rpk" "WT_6h_rep1_dupr_rpk", "WT_6h_rep2_dupr_rpk", "WT_6h_rep3_dupr_rpk")
rpk.names <- c("KO_0h_rep1_dupr_rpk", "KO_0h_rep2_dupr_rpk", "KO_0h_rep3_dupr_rpk", "KO_24h_rep1_dupr_rpk", "KO_24h_rep2_dupr_rpk", "KO_24h_rep3_dupr_rpk", "KO_48h_rep1_dupr_rpk", "KO_48h_rep2_dupr_rpk", "KO_48h_rep3_dupr_rpk", "KO_6h_rep1_dupr_rpk", "KO_6h_rep2_dupr_rpk", "WT_0h_rep1_dupr_rpk", "WT_0h_rep2_dupr_rpk", "WT_0h_rep3_dupr_rpk" , "WT_24h_rep1_dupr_rpk", "WT_24h_rep2_dupr_rpk", "WT_24h_rep3_dupr_rpk", "WT_48h_rep1_dupr_rpk", "WT_48h_rep2_dupr_rpk", "WT_48h_rep3_dupr_rpk", "WT_6h_rep1_dupr_rpk", "WT_6h_rep2_dupr_rpk", "WT_6h_rep3_dupr_rpk")
# Calculate tpm
tpm.names <- c()
for (col.names in rpk.names) {
new.col.name <- gsub("rpk", "tpm", sep="_")
tpm.names <- c(tpm.names, c(new.col.name))
count.tb <- count.tb %>%
mutate(!!sym(new.col.name) := !!sym(col.name) / (sum(!!sym(col.name)) / 1000000) )
}
colnames(head(count.tb))
# Calculate tpm
tpm.names <- c()
for (col.name in rpk.names) {
new.col.name <- gsub("rpk", "tpm", col.name)
tpm.names <- c(tpm.names, c(new.col.name))
count.tb <- count.tb %>%
mutate(!!sym(new.col.name) := !!sym(col.name) / (sum(!!sym(col.name)) / 1000000) )
}
colnames(head(count.tb))
count.tb$WT_6h_rep3_dupr_tpm[1:5]
count.tb$WT_6h_rep3_dupr_rpk[1:5]
tpm.names <- c(c("name"), tpm.names)
tpm.names <- c(c("name"), tpm.names)
tpm.tb <- count.tb %>%
select(one_of(tpm.names))
tpm.tb
write_csv(tpm.tb, "Exp337_dupr_tpm.csv")
getwd()
wk.dir <- "/Volumes/EXP337/Exp337CD25KONascent/3_tpm"
setwd(wk.dir)
# Read files
count.file <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/2_compiled_csv/Exp337_all_c5.csv"
ref.file <- "/Volumes/EXP337/Exp337CD25KONascent/References/GRCm38_exon_rmdup_srt_cb_srt_dupr.csv"
count.tb <- read_csv(count.file)
ref.tb <- read_csv(ref.file)
# Transform tibbles
ref.tb <- ref.tb %>%
mutate(size = abs(start-end)) %>%
separate(exon_id, sep="=", into=c("type", "name")) %>%
select("name", "size")
# Combine tibble
count.tb <- inner_join(count.tb, ref.tb, by="name")
colnames(ref.tb)
col.names <- colnames(count.tb)
col.numeric <- col.names[2:24]
rpk.names <- c()
# Calculate rpk
for (col.name in col.numeric) {
new.col.name <- paste(col.name, "rpk", sep="_")
rpk.names <- c(rpk.names, c(new.col.name))
count.tb <- count.tb %>%
mutate(!!sym(new.col.name) := !!sym(col.name) / size * 1000)
}
# Calculate tpm
tpm.names <- c()
for (col.name in rpk.names) {
new.col.name <- gsub("rpk", "tpm", col.name)
tpm.names <- c(tpm.names, c(new.col.name))
count.tb <- count.tb %>%
mutate(!!sym(new.col.name) := !!sym(col.name) / (sum(!!sym(col.name)) / 1000000) )
}
# Select tpm out
tpm.names <- c(c("name"), tpm.names)
tpm.tb <- count.tb %>%
select(one_of(tpm.names))
getwd()
getwd()
wk.dir <- "/Volumes/EXP337/Exp337CD25KONascent/3_tpm"
setwd(wk.dir)
wk.dir <- " /Volumes/EXP337/Exp337CD25KONascent/2_count/3_tpm"
setwd(wk.dir)
# Read files
count.file <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/2_compiled_csv/Exp337_all_c5.csv"
ref.file <- "/Volumes/EXP337/Exp337CD25KONascent/References/GRCm38_exon_rmdup_srt_cb_srt_dupr.csv"
count.tb <- read_csv(count.file)
ref.tb <- read_csv(ref.file)
# Transform tibbles
ref.tb <- ref.tb %>%
mutate(size = abs(start-end)) %>%
separate(exon_id, sep="=", into=c("type", "name")) %>%
select("name", "size")
# Combine tibble
count.tb <- inner_join(count.tb, ref.tb, by="name")
colnames(ref.tb)
col.names <- colnames(count.tb)
col.numeric <- col.names[2:24]
rpk.names <- c()
# Calculate rpk
for (col.name in col.numeric) {
new.col.name <- paste(col.name, "rpk", sep="_")
rpk.names <- c(rpk.names, c(new.col.name))
count.tb <- count.tb %>%
mutate(!!sym(new.col.name) := !!sym(col.name) / size * 1000)
}
# Calculate tpm
tpm.names <- c()
for (col.name in rpk.names) {
new.col.name <- gsub("rpk", "tpm", col.name)
tpm.names <- c(tpm.names, c(new.col.name))
count.tb <- count.tb %>%
mutate(!!sym(new.col.name) := !!sym(col.name) / (sum(!!sym(col.name)) / 1000000) )
}
# Select tpm out
tpm.names <- c(c("name"), tpm.names)
tpm.tb <- count.tb %>%
select(one_of(tpm.names))
getwd()
wk.dir <- " /Volumes/EXP337/Exp337CD25KONascent/2_count/3_tpm"
setwd(wk.dir)
wk.dir <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/3_tpm"
setwd(wk.dir)
# Read files
count.file <- "/Volumes/EXP337/Exp337CD25KONascent/2_count/2_compiled_csv/Exp337_all_c5.csv"
ref.file <- "/Volumes/EXP337/Exp337CD25KONascent/References/GRCm38_exon_rmdup_srt_cb_srt_dupr.csv"
count.tb <- read_csv(count.file)
ref.tb <- read_csv(ref.file)
# Transform tibbles
ref.tb <- ref.tb %>%
mutate(size = abs(start-end)) %>%
separate(exon_id, sep="=", into=c("type", "name")) %>%
select("name", "size")
# Combine tibble
count.tb <- inner_join(count.tb, ref.tb, by="name")
colnames(ref.tb)
col.names <- colnames(count.tb)
col.numeric <- col.names[2:24]
rpk.names <- c()
# Calculate rpk
for (col.name in col.numeric) {
new.col.name <- paste(col.name, "rpk", sep="_")
rpk.names <- c(rpk.names, c(new.col.name))
count.tb <- count.tb %>%
mutate(!!sym(new.col.name) := !!sym(col.name) / size * 1000)
}
# Calculate tpm
tpm.names <- c()
for (col.name in rpk.names) {
new.col.name <- gsub("rpk", "tpm", col.name)
tpm.names <- c(tpm.names, c(new.col.name))
count.tb <- count.tb %>%
mutate(!!sym(new.col.name) := !!sym(col.name) / (sum(!!sym(col.name)) / 1000000) )
}
# Select tpm out
tpm.names <- c(c("name"), tpm.names)
tpm.tb <- count.tb %>%
select(one_of(tpm.names))
getwd()
write_csv(tpm.tb, "Exp337_dupr_tpm.csv")
tpm.names.types <- c()
for (name in tpm.names){
new.name <- gsub("_dupr_tpm", "", name)
new.name <- gsub("_rep1", "", new.name)
new.name <- gsub("_rep2", "", new.name)
new.name <- gsub("_rep3", "", new.name)
}
tpm.names.types
tpm.names.types <- c()
for (name in tpm.names){
new.name <- gsub("_dupr_tpm", "", name)
new.name <- gsub("_rep1", "", new.name)
new.name <- gsub("_rep2", "", new.name)
new.name <- gsub("_rep3", "", new.name)
tpm.names.types <- c(tpm.names.types, c(new.name))
}
tpm.names.types
tpm.names.types <- tail(tpm.names.types, n=length(tpm.names.types-1))
tpm.names.types
tpm.names.types <- tail(tpm.names.types, length(tpm.names.types-1))
tpm.names.types
tpm.names.types <- tail(tpm.names.types, length(tpm.names.types) - 1)
tpm.names.types
tpm.names.types <- unique(tpm.names.types)
tpm.names.types
for (type in tpm.names.types) {
type.cols <- c()
for (col in tpm.names) {
if (type %in% col) {
type.cols <- c(type.cols, c(col))
}
}
print(type.cols)
}
for (type in tpm.names.types) {
type.cols <- c()
for (col in tpm.names) {
print(col)
if (type %in% col) {
type.cols <- c(type.cols, c(col))
}
}
print(type.cols)
}
for (type in tpm.names.types) {
print(type)
type.cols <- c()
for (col in tpm.names) {
print(col)
if (type %in% col) {
type.cols <- c(type.cols, c(col))
}
}
print(type.cols)
}
for (type in tpm.names.types) {
print(type)
type.cols <- c()
for (col in tpm.names) {
print(col)
if (grepl(type, col)) {
type.cols <- c(type.cols, c(col))
}
}
print(type.cols)
}
for (type in tpm.names.types) {
type.cols <- c()
for (col in tpm.names) {
if (grepl(type, col)) {
type.cols <- c(type.cols, c(col))
}
}
print(type.cols)
}
tpm.avg.tb <- tpm.tb %>% select(name)
tpm.avg.tb
tpm.avg.tb <- tpm.tb %>% select(name)
for (type in tpm.names.types) {
# find columns of the same replicate type
type.cols <- c()
for (col in tpm.names) {
if (grepl(type, col)) {
type.cols <- c(type.cols, c(col))
}
}
# Create a new tibble for the same replicate type...
new.tb <- tpm.tb %>% select(one_of(type.cols))
# Add type mean to new tibble
tpm.avg.tb <- tpm.avg.tb %>% add_column(!!sym(type) := rowMeans(new.tb))
}
tpm.avg.tb
write_csv(tpm.avg.tb, "Exp337_dupr_tpm_avg.csv")
