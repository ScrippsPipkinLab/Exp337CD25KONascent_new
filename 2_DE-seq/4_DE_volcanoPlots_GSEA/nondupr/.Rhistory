in_tab$group
cp1_name <- paste(compare_pair[1], "up", sep="_")
cp2_name <- paste(compare_pair[2], "up", sep="_")
mlog10p_cutoff <- 1.3
log2fc_cutoff <- 1
in_file <- "/Volumes/Yolanda/Exp337CD25KONascent/2_DE-seq/0.1_original_GN/nondupr/nondupr_KO_24h_vs_KO_0h_addGN.csv"
log2fc_lim <- FALSE
mlog10p_lim <- FALSE
use_genes <- c("Tbx21", "Prdm1", "Id2", "Id3", "Slamf6", "Tcf7", "Il2ra", "Sell", "Cd44", "Tox", "Klrg1")
compare_pair <- c("KO_24h", "KO_0h")
wid <- 4.5
hei <- 4.5
virtual_p_add <- TRUE
use_density <- FALSE
use_col_vec <- c( "#CB0000", "#3F6C45")
in_file_vec <- unlist(strsplit(in_file, "/"))
in_file_nopath <- in_file_vec[length(in_file_vec)]
out_file <- gsub(".csv", "_vplot", in_file_nopath)
out_file_nolegend <- gsub(".csv", "_vplot_nolegend", in_file_nopath)
out_file_noAnno <- gsub(".csv", "_vplot_noAnno", in_file_nopath)
in_tab <- read_csv(in_file)
if (virtual_p_add) {
in_tab <- in_tab %>% mutate(mlog10p = - log10(pvalue + 0.00000000001)) %>% mutate(sqrt_mlog10p = sqrt(mlog10p))
} else {
in_tab <- in_tab %>% mutate(mlog10p = - log10(pvalue)) %>% mutate(sqrt_mlog10p = sqrt(mlog10p))
}
in_tab <- in_tab %>% mutate(sqrt_log2fc = (sqrt(abs(log2FoldChange)) * log2FoldChange / abs(log2FoldChange)))
###----- Summarize the upper and lower limits of input
max_mlog10p <- max(in_tab$mlog10p, na.rm = TRUE)
min_mlog10p <- min(in_tab$mlog10p, na.rm = TRUE)
max_log2FC <- max(in_tab$log2FoldChange, na.rm = TRUE)
min_log2FC <- min(in_tab$log2FoldChange, na.rm = TRUE)
max_sqrt_mlog10p <- max(in_tab$sqrt_mlog10p, na.rm = TRUE)
min_sqrt_mlog10p <- min(in_tab$sqrt_mlog10p, na.rm = TRUE)
lims_vec <- c(max_mlog10p, min_mlog10p,
max_log2FC, min_log2FC,
max_sqrt_mlog10p, min_sqrt_mlog10p)
lims_names <- c("max_mlog10p", "min_mlog10p",
"max_log2FC", "min_log2FC",
"max_sqrt_mlog10p", "min_sqrt_mlog10p")
lims_tb <- tibble(limits=lims_names, vals=lims_vec)
colnames(lims_tb) <- c("limits", gsub(".csv", "", in_file_nopath))
###----- Determine limits of graph
if (log2fc_lim==FALSE) {
log2fc_lim <- ceiling(max(max_log2FC, abs(min_log2FC)))
}
if (mlog10p_lim==FALSE){
mlog10p_lim <- ceiling(max_sqrt_mlog10p)
}
nrow(in_tab)
cp1_name <- paste(compare_pair[1], "up", sep="_")
cp2_name <- paste(compare_pair[2], "up", sep="_")
in_tb_cp1 <- in_tab %>% filter(mlog10p >= mlog10p_cutoff) %>% filter(log2FoldChange >= log2fc_cutoff)
in_tb_cp2 <- in_tab %>% filter(mlog10p >= mlog10p_cutoff) %>% filter(log2FoldChange <= -log2fc_cutoff)
in_tb_cp1$group <- rep(cp1_name, nrow(in_tb_cp1))
in_tb_cp2$group <- rep(cp2_name, nrow(in_tb_cp2))
in_tb_cp1 <- in_tb_cp1 %>% select(c("gene_name", "group"))
in_tb_cp2 <- in_tb_cp2 %>% select(c("gene_name", "group"))
in_tb_cp <- bind_rows(in_tb_cp1, in_tb_cp2)
in_tab <- in_tab %>% left_join(in_tb_cp, by="gene_name")
in_tab <- in_tab %>% mutate(group = replace_na(group, "n.s."))
in_tb_ns <- in_tab %>% filter(group == "n.s.")
in_tb_cp1 <- in_tab %>% filter(group == cp1_name)
in_tb_cp2 <- in_tab %>% filter(group == cp2_name)
in_tab$group
#anno_tab <- in_tab %>% filter(mlog10p > mlog10p_cutoff) %>% filter(abs(log2FoldChange) > log2fc_cutoff)
#anno_tab2 <- in_tab %>% filter(mlog10p > 4)
#anno_tab <- anno_tab %>% bind_rows(anno_tab2) %>% distinct()
anno_tab <- in_tab %>% dplyr::select(one_of(c("gene_name", "log2FoldChange", "pvalue", "mlog10p", "sqrt_mlog10p", "sqrt_log2fc", "group"))) %>% na.omit() %>%
filter(group != "n.s.") %>% filter(gene_name %in% use_genes)
if (nrow(anno_tab) > 0) {
anno_tab_KO <- anno_tab %>% filter(log2FoldChange > 0)
anno_tab_KO$use_color <- rep(use_col_vec[1], nrow(anno_tab_KO))
anno_tab_WT <- anno_tab %>% filter(log2FoldChange < 0)
anno_tab_WT$use_color <- rep(use_col_vec[2], nrow(anno_tab_WT))
anno_tab <- anno_tab_WT %>% bind_rows(anno_tab_KO)
}
if (use_density) {
volcano_plot <- ggplot(in_tab, aes(x=sqrt_log2fc, y=mlog10p)) +
geom_vline(xintercept=0, size=0.3, alpha=0.7) +
geom_vline(xintercept=1, size=0.1, alpha=0.5) +
geom_vline(xintercept=-1, size=0.1, alpha=0.5) +
geom_hline(yintercept=1, size=0.1, alpha=0.5)
stat_density_2d(aes(alpha= sqrt(..density..)), geom = "raster", contour = FALSE)
} else {
volcano_plot <- ggplot(in_tab, aes(x=sqrt_log2fc, y=mlog10p)) +
geom_vline(xintercept=0, size=0.3, alpha=0.7) +
geom_vline(xintercept=1, size=0.1, alpha=0.5) +
geom_vline(xintercept=-1, size=0.1, alpha=0.5) +
geom_hline(yintercept=1, size=0.1, alpha=0.5)
}
volcano_plot_basic <- volcano_plot +
geom_point(data=in_tb_ns, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color="gray50") +
geom_point(data=in_tb_cp1, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color=use_col_vec[1]) +
geom_point(data=in_tb_cp2, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color=use_col_vec[2]) +
scale_x_continuous(limits = c(-log2fc_lim, log2fc_lim), expand = c(0, 0)) +
scale_y_sqrt(limits = c(0, mlog10p_lim), expand = c(0, 0)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
#volcano_plot
if (nrow(anno_tab) > 0) {
volcano_plot <- volcano_plot_basic +
geom_point(data = anno_tab, aes(x=sqrt_log2fc, y=mlog10p, color=anno_tab$use_color, stroke=0)) +
scale_color_manual(values = use_col_vec) +
geom_text_repel(data = anno_tab, label=anno_tab$gene_name, max.iter = 40000, force = 2, aes(color=anno_tab$use_color), segment.alpha = 0.3, segment.size = 0.5)
} else {
print("No annotation")
volcano_plot <- volcano_plot_basic
}
#volcano_plot
volcano_plot_nolegend <- volcano_plot +
theme(legend.position="none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank())
volcano_plot_noAnno <- volcano_plot_basic +
theme(legend.position="none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank())
volcano_plot_basic
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
mlog10p_cutoff <- 1.3
log2fc_cutoff <- 1
in_file <- "/Volumes/Yolanda/Exp337CD25KONascent/2_DE-seq/0.1_original_GN/nondupr/nondupr_KO_24h_vs_KO_0h_addGN.csv"
log2fc_lim <- FALSE
mlog10p_lim <- FALSE
use_genes <- c("Tbx21", "Prdm1", "Id2", "Id3", "Slamf6", "Tcf7", "Il2ra", "Sell", "Cd44", "Tox", "Klrg1")
compare_pair <- c("KO_24h", "KO_0h")
wid <- 4.5
hei <- 4.5
virtual_p_add <- TRUE
use_density <- FALSE
mlog10p_cutoff <- 1.3
log2fc_cutoff <- 1
in_file <- "/Volumes/Yolanda/Exp337CD25KONascent/2_DE-seq/0.1_original_GN/nondupr/nondupr_KO_24h_vs_KO_0h_addGN.csv"
log2fc_lim <- FALSE
mlog10p_lim <- FALSE
use_genes <- c("Tbx21", "Prdm1", "Id2", "Id3", "Slamf6", "Tcf7", "Il2ra", "Sell", "Cd44", "Tox", "Klrg1")
compare_pair <- c("KO_24h", "KO_0h")
wid <- 4.5
hei <- 4.5
virtual_p_add <- TRUE
use_density <- FALSE
use_col_vec <- c( "#CB0000", "#3F6C45")
in_file_vec <- unlist(strsplit(in_file, "/"))
in_file_nopath <- in_file_vec[length(in_file_vec)]
out_file <- gsub(".csv", "_vplot", in_file_nopath)
out_file_nolegend <- gsub(".csv", "_vplot_nolegend", in_file_nopath)
out_file_noAnno <- gsub(".csv", "_vplot_noAnno", in_file_nopath)
in_tab <- read_csv(in_file)
if (virtual_p_add) {
in_tab <- in_tab %>% mutate(mlog10p = - log10(pvalue + 0.00000000001)) %>% mutate(sqrt_mlog10p = sqrt(mlog10p))
} else {
in_tab <- in_tab %>% mutate(mlog10p = - log10(pvalue)) %>% mutate(sqrt_mlog10p = sqrt(mlog10p))
}
in_tab <- in_tab %>% mutate(sqrt_log2fc = (sqrt(abs(log2FoldChange)) * log2FoldChange / abs(log2FoldChange)))
###----- Summarize the upper and lower limits of input
max_mlog10p <- max(in_tab$mlog10p, na.rm = TRUE)
min_mlog10p <- min(in_tab$mlog10p, na.rm = TRUE)
max_log2FC <- max(in_tab$log2FoldChange, na.rm = TRUE)
min_log2FC <- min(in_tab$log2FoldChange, na.rm = TRUE)
max_sqrt_mlog10p <- max(in_tab$sqrt_mlog10p, na.rm = TRUE)
min_sqrt_mlog10p <- min(in_tab$sqrt_mlog10p, na.rm = TRUE)
lims_vec <- c(max_mlog10p, min_mlog10p,
max_log2FC, min_log2FC,
max_sqrt_mlog10p, min_sqrt_mlog10p)
lims_names <- c("max_mlog10p", "min_mlog10p",
"max_log2FC", "min_log2FC",
"max_sqrt_mlog10p", "min_sqrt_mlog10p")
lims_tb <- tibble(limits=lims_names, vals=lims_vec)
colnames(lims_tb) <- c("limits", gsub(".csv", "", in_file_nopath))
###----- Determine limits of graph
if (log2fc_lim==FALSE) {
log2fc_lim <- ceiling(max(max_log2FC, abs(min_log2FC)))
}
if (mlog10p_lim==FALSE){
mlog10p_lim <- ceiling(max_sqrt_mlog10p)
}
nrow(in_tab)
cp1_name <- paste(compare_pair[1], "up", sep="_")
cp2_name <- paste(compare_pair[2], "up", sep="_")
in_tb_cp1 <- in_tab %>% filter(mlog10p >= mlog10p_cutoff) %>% filter(log2FoldChange >= log2fc_cutoff)
in_tb_cp2 <- in_tab %>% filter(mlog10p >= mlog10p_cutoff) %>% filter(log2FoldChange <= -log2fc_cutoff)
in_tb_cp1$group <- rep(cp1_name, nrow(in_tb_cp1))
in_tb_cp2$group <- rep(cp2_name, nrow(in_tb_cp2))
in_tb_cp1 <- in_tb_cp1 %>% select(c("gene_name", "group"))
in_tb_cp2 <- in_tb_cp2 %>% select(c("gene_name", "group"))
in_tb_cp <- bind_rows(in_tb_cp1, in_tb_cp2)
in_tab <- in_tab %>% left_join(in_tb_cp, by="gene_name")
in_tab <- in_tab %>% mutate(group = replace_na(group, "n.s."))
in_tb_ns <- in_tab %>% filter(group == "n.s.")
in_tb_cp1 <- in_tab %>% filter(group == cp1_name)
in_tb_cp2 <- in_tab %>% filter(group == cp2_name)
in_tab$group
#anno_tab <- in_tab %>% filter(mlog10p > mlog10p_cutoff) %>% filter(abs(log2FoldChange) > log2fc_cutoff)
#anno_tab2 <- in_tab %>% filter(mlog10p > 4)
#anno_tab <- anno_tab %>% bind_rows(anno_tab2) %>% distinct()
anno_tab <- in_tab %>% dplyr::select(one_of(c("gene_name", "log2FoldChange", "pvalue", "mlog10p", "sqrt_mlog10p", "sqrt_log2fc", "group"))) %>% na.omit() %>%
filter(group != "n.s.") %>% filter(gene_name %in% use_genes)
if (nrow(anno_tab) > 0) {
anno_tab_KO <- anno_tab %>% filter(log2FoldChange > 0)
anno_tab_KO$use_color <- rep(use_col_vec[1], nrow(anno_tab_KO))
anno_tab_WT <- anno_tab %>% filter(log2FoldChange < 0)
anno_tab_WT$use_color <- rep(use_col_vec[2], nrow(anno_tab_WT))
anno_tab <- anno_tab_WT %>% bind_rows(anno_tab_KO)
}
if (use_density) {
volcano_plot <- ggplot(in_tab, aes(x=sqrt_log2fc, y=mlog10p)) +
geom_vline(xintercept=0, size=0.3, alpha=0.7) +
geom_vline(xintercept=1, size=0.1, alpha=0.5) +
geom_vline(xintercept=-1, size=0.1, alpha=0.5) +
geom_hline(yintercept=1, size=0.1, alpha=0.5)
stat_density_2d(aes(alpha= sqrt(..density..)), geom = "raster", contour = FALSE)
} else {
volcano_plot <- ggplot(in_tab, aes(x=sqrt_log2fc, y=mlog10p)) +
geom_vline(xintercept=0, size=0.3, alpha=0.7) +
geom_vline(xintercept=1, size=0.1, alpha=0.5) +
geom_vline(xintercept=-1, size=0.1, alpha=0.5) +
geom_hline(yintercept=1, size=0.1, alpha=0.5)
}
volcano_plot_basic <- volcano_plot +
#geom_point(data=in_tb_ns, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color="gray50") +
geom_point(data=in_tb_cp1, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color=use_col_vec[1]) +
geom_point(data=in_tb_cp2, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color=use_col_vec[2]) +
scale_x_continuous(limits = c(-log2fc_lim, log2fc_lim), expand = c(0, 0)) +
scale_y_sqrt(limits = c(0, mlog10p_lim), expand = c(0, 0)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
volcano_plot_basic
volcano_plot_basic <- volcano_plot +
#geom_point(data=in_tb_ns, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color="gray50") +
geom_point(data=in_tb_cp1, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color=use_col_vec[1]) +
#geom_point(data=in_tb_cp2, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color=use_col_vec[2]) +
scale_x_continuous(limits = c(-log2fc_lim, log2fc_lim), expand = c(0, 0)) +
scale_y_sqrt(limits = c(0, mlog10p_lim), expand = c(0, 0)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
volcano_plot_basic
in_tb_cp2
in_tb_cp1 <- in_tab %>% filter(mlog10p >= mlog10p_cutoff) %>% filter(log2FoldChange >= log2fc_cutoff)
in_tb_cp2 <- in_tab %>% filter(mlog10p >= mlog10p_cutoff) %>% filter(log2FoldChange <= -log2fc_cutoff)
in_tb_cp1
in_tab
use_col_vec <- c( "#CB0000", "#3F6C45")
in_file_vec <- unlist(strsplit(in_file, "/"))
in_file_nopath <- in_file_vec[length(in_file_vec)]
out_file <- gsub(".csv", "_vplot", in_file_nopath)
out_file_nolegend <- gsub(".csv", "_vplot_nolegend", in_file_nopath)
out_file_noAnno <- gsub(".csv", "_vplot_noAnno", in_file_nopath)
in_tab <- read_csv(in_file)
if (virtual_p_add) {
in_tab <- in_tab %>% mutate(mlog10p = - log10(pvalue + 0.00000000001)) %>% mutate(sqrt_mlog10p = sqrt(mlog10p))
} else {
in_tab <- in_tab %>% mutate(mlog10p = - log10(pvalue)) %>% mutate(sqrt_mlog10p = sqrt(mlog10p))
}
in_tab <- in_tab %>% mutate(sqrt_log2fc = (sqrt(abs(log2FoldChange)) * log2FoldChange / abs(log2FoldChange)))
use_col_vec <- c( "#CB0000", "#3F6C45")
in_file_vec <- unlist(strsplit(in_file, "/"))
in_file_nopath <- in_file_vec[length(in_file_vec)]
out_file <- gsub(".csv", "_vplot", in_file_nopath)
out_file_nolegend <- gsub(".csv", "_vplot_nolegend", in_file_nopath)
out_file_noAnno <- gsub(".csv", "_vplot_noAnno", in_file_nopath)
in_tab <- read_csv(in_file)
colnames(in_tab) <- c("transcript_name", colnames(in_tab)[2:length(colnames(in_tab))])
mlog10p_cutoff <- 1.3
log2fc_cutoff <- 1
in_file <- "/Volumes/Yolanda/Exp337CD25KONascent/2_DE-seq/0.1_original_GN/nondupr/nondupr_KO_24h_vs_KO_0h_addGN.csv"
log2fc_lim <- FALSE
mlog10p_lim <- FALSE
use_genes <- c("Tbx21", "Prdm1", "Id2", "Id3", "Slamf6", "Tcf7", "Il2ra", "Sell", "Cd44", "Tox", "Klrg1")
compare_pair <- c("KO_24h", "KO_0h")
wid <- 4.5
hei <- 4.5
virtual_p_add <- TRUE
use_density <- FALSE
use_col_vec <- c( "#CB0000", "#3F6C45")
in_file_vec <- unlist(strsplit(in_file, "/"))
in_file_nopath <- in_file_vec[length(in_file_vec)]
out_file <- gsub(".csv", "_vplot", in_file_nopath)
out_file_nolegend <- gsub(".csv", "_vplot_nolegend", in_file_nopath)
out_file_noAnno <- gsub(".csv", "_vplot_noAnno", in_file_nopath)
in_tab <- read_csv(in_file)
colnames(in_tab) <- c("transcript_name", colnames(in_tab)[2:length(colnames(in_tab))])
if (virtual_p_add) {
in_tab <- in_tab %>% mutate(mlog10p = - log10(pvalue + 0.00000000001)) %>% mutate(sqrt_mlog10p = sqrt(mlog10p))
} else {
in_tab <- in_tab %>% mutate(mlog10p = - log10(pvalue)) %>% mutate(sqrt_mlog10p = sqrt(mlog10p))
}
in_tab <- in_tab %>% mutate(sqrt_log2fc = (sqrt(abs(log2FoldChange)) * log2FoldChange / abs(log2FoldChange)))
###----- Summarize the upper and lower limits of input
if (TRUE) {
max_mlog10p <- max(in_tab$mlog10p, na.rm = TRUE)
min_mlog10p <- min(in_tab$mlog10p, na.rm = TRUE)
max_log2FC <- max(in_tab$log2FoldChange, na.rm = TRUE)
min_log2FC <- min(in_tab$log2FoldChange, na.rm = TRUE)
max_sqrt_mlog10p <- max(in_tab$sqrt_mlog10p, na.rm = TRUE)
min_sqrt_mlog10p <- min(in_tab$sqrt_mlog10p, na.rm = TRUE)
lims_vec <- c(max_mlog10p, min_mlog10p,
max_log2FC, min_log2FC,
max_sqrt_mlog10p, min_sqrt_mlog10p)
lims_names <- c("max_mlog10p", "min_mlog10p",
"max_log2FC", "min_log2FC",
"max_sqrt_mlog10p", "min_sqrt_mlog10p")
lims_tb <- tibble(limits=lims_names, vals=lims_vec)
colnames(lims_tb) <- c("limits", gsub(".csv", "", in_file_nopath))
}
###----- Determine limits of graph
if (log2fc_lim==FALSE) {
log2fc_lim <- ceiling(max(max_log2FC, abs(min_log2FC)))
}
if (mlog10p_lim==FALSE){
mlog10p_lim <- ceiling(max_sqrt_mlog10p)
}
nrow(in_tab)
cp1_name <- paste(compare_pair[1], "up", sep="_")
cp2_name <- paste(compare_pair[2], "up", sep="_")
in_tb_cp1 <- in_tab %>% filter(mlog10p >= mlog10p_cutoff) %>% filter(log2FoldChange >= log2fc_cutoff)
in_tb_cp2 <- in_tab %>% filter(mlog10p >= mlog10p_cutoff) %>% filter(log2FoldChange <= -log2fc_cutoff)
in_tb_cp1$group <- rep(cp1_name, nrow(in_tb_cp1))
in_tb_cp2$group <- rep(cp2_name, nrow(in_tb_cp2))
in_tb_cp1 <- in_tb_cp1 %>% select(c("transcript_name", "group"))
in_tb_cp2 <- in_tb_cp2 %>% select(c("transcript_name", "group"))
in_tb_cp <- bind_rows(in_tb_cp1, in_tb_cp2)
in_tab <- in_tab %>% left_join(in_tb_cp, by="transcript_name")
in_tab <- in_tab %>% mutate(group = replace_na(group, "n.s."))
in_tb_ns <- in_tab %>% filter(group == "n.s.")
in_tb_cp1 <- in_tab %>% filter(group == cp1_name)
in_tb_cp2 <- in_tab %>% filter(group == cp2_name)
in_tab$group
in_tb_cp1
#anno_tab <- in_tab %>% filter(mlog10p > mlog10p_cutoff) %>% filter(abs(log2FoldChange) > log2fc_cutoff)
#anno_tab2 <- in_tab %>% filter(mlog10p > 4)
#anno_tab <- anno_tab %>% bind_rows(anno_tab2) %>% distinct()
anno_tab <- in_tab %>% dplyr::select(one_of(c("gene_name", "log2FoldChange", "pvalue", "mlog10p", "sqrt_mlog10p", "sqrt_log2fc", "group"))) %>% na.omit() %>%
filter(group != "n.s.") %>% filter(gene_name %in% use_genes)
if (nrow(anno_tab) > 0) {
anno_tab_KO <- anno_tab %>% filter(log2FoldChange > 0)
anno_tab_KO$use_color <- rep(use_col_vec[1], nrow(anno_tab_KO))
anno_tab_WT <- anno_tab %>% filter(log2FoldChange < 0)
anno_tab_WT$use_color <- rep(use_col_vec[2], nrow(anno_tab_WT))
anno_tab <- anno_tab_WT %>% bind_rows(anno_tab_KO)
}
if (use_density) {
volcano_plot <- ggplot(in_tab, aes(x=sqrt_log2fc, y=mlog10p)) +
geom_vline(xintercept=0, size=0.3, alpha=0.7) +
geom_vline(xintercept=1, size=0.1, alpha=0.5) +
geom_vline(xintercept=-1, size=0.1, alpha=0.5) +
geom_hline(yintercept=1, size=0.1, alpha=0.5)
stat_density_2d(aes(alpha= sqrt(..density..)), geom = "raster", contour = FALSE)
} else {
volcano_plot <- ggplot(in_tab, aes(x=sqrt_log2fc, y=mlog10p)) +
geom_vline(xintercept=0, size=0.3, alpha=0.7) +
geom_vline(xintercept=1, size=0.1, alpha=0.5) +
geom_vline(xintercept=-1, size=0.1, alpha=0.5) +
geom_hline(yintercept=1, size=0.1, alpha=0.5)
}
volcano_plot_basic <- volcano_plot +
#geom_point(data=in_tb_ns, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color="gray50") +
geom_point(data=in_tb_cp1, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color=use_col_vec[1]) +
#geom_point(data=in_tb_cp2, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color=use_col_vec[2]) +
scale_x_continuous(limits = c(-log2fc_lim, log2fc_lim), expand = c(0, 0)) +
scale_y_sqrt(limits = c(0, mlog10p_lim), expand = c(0, 0)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
volcano_plot_basic
volcano_plot_basic <- volcano_plot +
geom_point(data=in_tb_ns, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color="gray50") +
geom_point(data=in_tb_cp1, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color=use_col_vec[1]) +
geom_point(data=in_tb_cp2, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color=use_col_vec[2]) +
scale_x_continuous(limits = c(-log2fc_lim, log2fc_lim), expand = c(0, 0)) +
scale_y_sqrt(limits = c(0, mlog10p_lim), expand = c(0, 0)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
volcano_plot_basic
mlog10p_cutoff <- 1
log2fc_cutoff <- 1
in_file <- "/Volumes/Yolanda/Exp337CD25KONascent/2_DE-seq/0.1_original_GN/nondupr/nondupr_KO_24h_vs_KO_0h_addGN.csv"
log2fc_lim <- FALSE
mlog10p_lim <- FALSE
use_genes <- c("Tbx21", "Prdm1", "Id2", "Id3", "Slamf6", "Tcf7", "Il2ra", "Sell", "Cd44", "Tox", "Klrg1")
compare_pair <- c("KO_24h", "KO_0h")
wid <- 4.5
hei <- 4.5
virtual_p_add <- TRUE
use_density <- FALSE
use_col_vec <- c( "#CB0000", "#3F6C45")
in_file_vec <- unlist(strsplit(in_file, "/"))
in_file_nopath <- in_file_vec[length(in_file_vec)]
out_file <- gsub(".csv", "_vplot", in_file_nopath)
out_file_nolegend <- gsub(".csv", "_vplot_nolegend", in_file_nopath)
out_file_noAnno <- gsub(".csv", "_vplot_noAnno", in_file_nopath)
in_tab <- read_csv(in_file)
colnames(in_tab) <- c("transcript_name", colnames(in_tab)[2:length(colnames(in_tab))])
if (virtual_p_add) {
in_tab <- in_tab %>% mutate(mlog10p = - log10(pvalue + 0.00000000001)) %>% mutate(sqrt_mlog10p = sqrt(mlog10p))
} else {
in_tab <- in_tab %>% mutate(mlog10p = - log10(pvalue)) %>% mutate(sqrt_mlog10p = sqrt(mlog10p))
}
in_tab <- in_tab %>% mutate(sqrt_log2fc = (sqrt(abs(log2FoldChange)) * log2FoldChange / abs(log2FoldChange)))
###----- Summarize the upper and lower limits of input
if (TRUE) {
max_mlog10p <- max(in_tab$mlog10p, na.rm = TRUE)
min_mlog10p <- min(in_tab$mlog10p, na.rm = TRUE)
max_log2FC <- max(in_tab$log2FoldChange, na.rm = TRUE)
min_log2FC <- min(in_tab$log2FoldChange, na.rm = TRUE)
max_sqrt_mlog10p <- max(in_tab$sqrt_mlog10p, na.rm = TRUE)
min_sqrt_mlog10p <- min(in_tab$sqrt_mlog10p, na.rm = TRUE)
lims_vec <- c(max_mlog10p, min_mlog10p,
max_log2FC, min_log2FC,
max_sqrt_mlog10p, min_sqrt_mlog10p)
lims_names <- c("max_mlog10p", "min_mlog10p",
"max_log2FC", "min_log2FC",
"max_sqrt_mlog10p", "min_sqrt_mlog10p")
lims_tb <- tibble(limits=lims_names, vals=lims_vec)
colnames(lims_tb) <- c("limits", gsub(".csv", "", in_file_nopath))
}
###----- Determine limits of graph
if (log2fc_lim==FALSE) {
log2fc_lim <- ceiling(max(max_log2FC, abs(min_log2FC)))
}
if (mlog10p_lim==FALSE){
mlog10p_lim <- ceiling(max_sqrt_mlog10p)
}
###----- Separate into non-significant & up / down reaulgated groups
nrow(in_tab)
cp1_name <- paste(compare_pair[1], "up", sep="_")
cp2_name <- paste(compare_pair[2], "up", sep="_")
in_tb_cp1 <- in_tab %>% filter(mlog10p >= mlog10p_cutoff) %>% filter(log2FoldChange >= log2fc_cutoff)
in_tb_cp2 <- in_tab %>% filter(mlog10p >= mlog10p_cutoff) %>% filter(log2FoldChange <= -log2fc_cutoff)
in_tb_cp1$group <- rep(cp1_name, nrow(in_tb_cp1))
in_tb_cp2$group <- rep(cp2_name, nrow(in_tb_cp2))
in_tb_cp1 <- in_tb_cp1 %>% select(c("transcript_name", "group"))
in_tb_cp2 <- in_tb_cp2 %>% select(c("transcript_name", "group"))
in_tb_cp <- bind_rows(in_tb_cp1, in_tb_cp2)
in_tab <- in_tab %>% left_join(in_tb_cp, by="transcript_name")
in_tab <- in_tab %>% mutate(group = replace_na(group, "n.s."))
in_tb_ns <- in_tab %>% filter(group == "n.s.")
in_tb_cp1 <- in_tab %>% filter(group == cp1_name)
in_tb_cp2 <- in_tab %>% filter(group == cp2_name)
#anno_tab <- in_tab %>% filter(mlog10p > mlog10p_cutoff) %>% filter(abs(log2FoldChange) > log2fc_cutoff)
#anno_tab2 <- in_tab %>% filter(mlog10p > 4)
#anno_tab <- anno_tab %>% bind_rows(anno_tab2) %>% distinct()
anno_tab <- in_tab %>% dplyr::select(one_of(c("gene_name", "log2FoldChange", "pvalue", "mlog10p", "sqrt_mlog10p", "sqrt_log2fc", "group"))) %>% na.omit() %>%
filter(group != "n.s.") %>% filter(gene_name %in% use_genes)
if (nrow(anno_tab) > 0) {
anno_tab_KO <- anno_tab %>% filter(log2FoldChange > 0)
anno_tab_KO$use_color <- rep(use_col_vec[1], nrow(anno_tab_KO))
anno_tab_WT <- anno_tab %>% filter(log2FoldChange < 0)
anno_tab_WT$use_color <- rep(use_col_vec[2], nrow(anno_tab_WT))
anno_tab <- anno_tab_WT %>% bind_rows(anno_tab_KO)
}
if (use_density) {
volcano_plot <- ggplot(in_tab, aes(x=sqrt_log2fc, y=mlog10p)) +
geom_vline(xintercept=0, size=0.3, alpha=0.7) +
geom_vline(xintercept=1, size=0.1, alpha=0.5) +
geom_vline(xintercept=-1, size=0.1, alpha=0.5) +
geom_hline(yintercept=1, size=0.1, alpha=0.5)
stat_density_2d(aes(alpha= sqrt(..density..)), geom = "raster", contour = FALSE)
} else {
volcano_plot <- ggplot(in_tab, aes(x=sqrt_log2fc, y=mlog10p)) +
geom_vline(xintercept=0, size=0.3, alpha=0.7) +
geom_vline(xintercept=1, size=0.1, alpha=0.5) +
geom_vline(xintercept=-1, size=0.1, alpha=0.5) +
geom_hline(yintercept=1, size=0.1, alpha=0.5)
}
volcano_plot_basic <- volcano_plot +
geom_point(data=in_tb_ns, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color="gray50") +
geom_point(data=in_tb_cp1, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color=use_col_vec[1]) +
geom_point(data=in_tb_cp2, aes(x=sqrt_log2fc, y=mlog10p), stroke=0, alpha=0.2, size=0.2, color=use_col_vec[2]) +
scale_x_continuous(limits = c(-log2fc_lim, log2fc_lim), expand = c(0, 0)) +
scale_y_sqrt(limits = c(0, mlog10p_lim), expand = c(0, 0)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
volcano_plot_basic
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
text_annotations <- data.frame(
xpos = c(-Inf,-Inf,Inf,Inf),
ypos =  c(-Inf, Inf,-Inf,Inf),
annotateText = c("Bottom Left (h0,v0)","Top Left (h0,v1)"
,"Bottom Right h1,v0","Top Right h1,v1"),
hjustvar = c(0,0,1,1) ,
vjustvar = c(0,1,0,1)) #<- adjust
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
rev(use_col_vec)
use_col_vec <- c( "firebrick", "cyan4")
rev(use_col_vec)
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
source('/Volumes/Yolanda/Exp337CD25KONascent/codes_locol/2_4_DEseq_VolcanoPlots.R')
